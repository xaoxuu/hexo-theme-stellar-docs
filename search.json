[{"title":"探索号 🛰️ 文章分享","path":"/wiki/stellar/articles.html","content":"关于 Stellar 探索号 用户遇到问题第一步应该是查找官方文档，但是官方文档未必能够面面俱到，尤其是一些 DIY 方面的内容，这时候如果能有一个入口列出相关外站文章的话，对用户来说会非常有帮助，于是「Stellar 探索号」应运而生。任何人都可以很方便地提交文章到这个列表，只需要创建一个 issue 就可以了。如果您也有与 Stellar 相关的文章并希望显示在这里，可以直接在 hexo-theme-stellar 中选择【文章分享】模板按照格式提交即可，立即生效。"},{"title":"一站多作者配置","path":"/wiki/stellar/authors.html","content":"支持多个作者在一个站点发布文章，需要先配置作者信息： blog/source/_data/authors.yml# 作者 1 （默认）xaoxuu: name: Mr. X avatar: https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/xaoxuu/avatar/rect-256@2x.png banner: https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/banner/friends.jpg description: 如果宇宙中真有什么终极的逻辑，那就是我们终有一天会在舰桥上重逢，直到生命终结。# 作者 2author2: name: xxx ... 配置了作者信息之后，第一个作者就是默认作者，在文章卡片和面包屑导航会显示作者名。对于不是默认作者的文章，需要在 front-matter 中指定本文的作者： blog/source/_posts/xxx.md---author: author2--- 作者资料页 文章面包屑导航处点击作者链接会进入自动生成的作者个人资料页，目前内容是一个横幅加作者的文章列表。如果你有什么好的布局想法，请留言讨论～ 默认的个人资料页是： /author/id/index.html，可以在这里修改： blog/_config.stellar.ymlsite_tree: author: base_dir: author"},{"title":"开发者和社区支持","path":"/wiki/stellar/contributors.html","content":"开发者 如何加入社区 社区建设主要包括以下几个方面： Issues 技术问题答疑、BUG反馈 Discussions 论坛、相关话题讨论 文档 维护 探索号 文章收录 QQ群：1146399464，验证码：vlts-2021（以聊天为主，技术问题未必跟进。） 无论在什么渠道，学习并掌握 提问的智慧(28k+ Stars) 可以方便大家更高效地帮你解决问题。 这类提问不会有人响应XXX 功能怎么用？（文档有详细描述）这个功能怎么用不了啊（不说明自己操作了什么，也不展示实际效果）我怎么跑不起来，能帮我看看吗？（什么也不尝试，直接丢项目代码）怎么报错了呢？（不贴或只贴极少部分的出错提示）这个代码怎么改（扔过来一大段代码）XXX 什么意思？（没有经过任何搜索） 这类提问会被积极响应我这里遇到了一个问题：【问题描述】，我经过了以下尝试：【思路细节】，不能得到解决，报错如下：【报错截图线上预览地址仓库源代码地址】，请问该怎么解决？我不太理解【某处】里的【某处】，我的理解是这样的：【思路细节】，对吗？我查看了文档的【某处】，并尝试【做法】，但是没有得到【预想效果】，正确的做法应该是什么？ 感谢点赞支持者 1-100 101-200 201-300 301-400 401-500 501-600 601-700"},{"title":"使用 Stellar 主题的博客","path":"/wiki/stellar/examples.html","content":"开源 demo 示例xaoxuuhexo-theme-stellar-examples 这个仓库里有两个目录： 目录 场景 blog 普通博客、综合型站点，主页是博客文章列表 docs 单项目站点，没有博客功能，主页是文档主页 使用 Stellar 主题的博客 小提示如果您也使用了 Stellar 并希望显示在这里，可以在 hexo-theme-stellar-showcase 中提交 issue 告知您的站点信息，在您提交后的大约 3 分钟内生效。"},{"title":"开始您全新的博客之旅","path":"/wiki/stellar/index.html","content":"Stellar 是一个内置文档系统的简约商务风 Hexo 主题，支持丰富的标签和动态数据组件，帮助您简单从容地应对各种表达需求，十分推荐内容创作者使用 Stellar 开始您全新的博客之旅。 了解 Stellar 如何在混乱中建立秩序 “真正的简约远不止删繁就简，而是在纷繁中建立秩序。” 人的注意力是有限的，要提高有效信息的醒目程度，就必须降低不重要信息醒目程度，删除所有无效信息。 降低视觉密度 增加留白，增加间距。 减少颜色丰富度，大面积出现的是中性色，彩色必须有其特殊意义，意义相同的元素使用同一种颜色。 提高有效信息优先级 文章标题永远是最大的，对比度最高的 不可交互的不重要的小标题（如侧边栏某个插件的标题）降低对比度 与文章相关的不重要的小标题，使用小号字体 删掉无效信息 文章标签、字数、阅读量、评论数 网站访问量、字数、搭建时间 全局播放器（除了特殊文章） 开始前的准备工作尽管我们致力于降低使用门槛，但是自建独立博客仍然需要一定的相关知识，markdown 常用语法是必须要掌握的，除此之外，您还需要知道 yaml 文件格式、简单的 git 知识，最最重要的是，遇到问题知道该如何高效地寻找答案： 翻阅和搜索文档 搜索 issues 中是否已经有解决办法 如果没有，新建 issue 并按照要求进行操作，详尽地描述您遇到的问题 如果您没有使用过 Hexo 也不要着急，我十分建议您去通读一遍 Hexo 中文文档。 https://hexo.io/zh-cn/docs/https://hexo.io/zh-cn/docs/ 此外，如果您从旧版本更新或者其它主题迁移，请确保环境版本不要太低，否则会产生兼容性问题： 建议的版本Hexo: 6.3.0 ~ latesthexo-cli: 4.3.0 ~ latestnode: 14.17.3 ～ latest LTS # 建议选择 LTS 版本，过高的版本 hexo 还没有进行兼容。npm: 6.14.13 ~ latest 安装与更新稳定版最新版自定义引用源码安装方法打开终端并进入博客文件夹，执行：在 blog/_config.yml 文件中找到并修改：更新方法打开终端并进入博客文件夹，执行：阅读 更新日志 进行迁移操作。适用范围稳定版适用于以内容创作为主，不需要自定义主题，追求稳定和可靠性的用户。安装方法把 Stellar 主题仓库添加为博客仓库的子模块在 blog/_config.yml 文件中找到并修改：更新方法打开终端并进入主题文件夹，执行：阅读 更新日志 进行迁移操作。适用范围最新版适用于以内容创作为主，不需要自定义主题，追求新特性的用户。安装方法把 Stellar 主题仓库 fork 到您的 GitHub 账号下把您 fork 的 Stellar 主题仓库添加为博客仓库的子模块在 blog/_config.yml 文件中找到并修改：更新方法在您 fork 的 Stellar 主题仓库打开终端，执行：阅读 更新日志 进行迁移操作。适用范围自定义版适用于对主题有自定义需求，且掌握了一定的前端知识和动手能力的用户。安装方法下载源码放到 themes/ 文件夹下面试用。适用范围仅适合测试，无法获得更新。 关于 StellarStar History本项目永久开源免费，如果您喜欢本项目，请 点个赞 支持一下吧～ 开源许可协议项目中的许可声明文件应包含在所有副本中 本项目是由 @xaoxuu 设计和开发，后期也合并了 开源贡献者 提交的代码，使用 MIT License 开源许可协议进行授权，拷贝、分享或基于此进行创作时请遵守协议内容： MIT LicenseCopyright (c) 2021 xaoxuuPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the Software), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included in allcopies or substantial portions of the Software.THE SOFTWARE IS PROVIDED AS IS, WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THESOFTWARE. 探索 Stellar这里展示最新3篇探索号投稿文章 更多文章投稿"},{"title":"实现完整的笔记体系","path":"/wiki/stellar/notebooks.html","content":"感谢 @calfzhou 提交 PR#464 引入了一套全新的笔记系统，并提供了详细的文档说明。 笔记 vs 博客文章、专栏、文档主要还是组织管理方式的差异。 博客文章是相对松散的，文章和文章之前一般没有很强的关联性，通常按照发表时间自然排序。博客本质还是一种「日记」，会更在意发表时间，虽然也会更新内容，但不会频繁更新，更新时候也一般以增补修订为主。 专栏是在博客文章的基础上，加强了前后的关联性和整体性，专栏内的文章有较强的线性顺序和连续要求，并一般将这种顺序落实在发表时间上。其他方面跟博客文章类似。 文档（wiki）目前主要是为知识库、产品文档场景设计的，通常拥有有限的不常变动的页面数量，各个页面之间有较强的关联性，通过（手动维护）文档树来管理这种关联性。另外相较于博客文章和专栏，文档页面的内容是根据项目、产品的迭代而持续不断维护更新的，相比发表时间，它更加关注最后更新时间和修改历史。 笔记（note）的页面关联性层面像博客文章，是比较松散的，一般没有专栏那么强的前后线性顺序，也没有文档那么强的树形结构。但它又不像博客文章那样，需要按发表时间排序，因为笔记的内容往往是持续更新的，会更加关注最后更新时间。另外，笔记的不同页面之间可以通过引用来形成网状结构，构成知识图谱。笔记的页面数量方面也比较像博客文章，是没有数量上限的，不像文档那样一般是相对有限的页面数量。另外常见的管理笔记的方式是通过标签（尤其嵌套标签形成的标签树）来分组，标签的好处是一篇笔记可以归属多个标签。 我不用博客文章来承载笔记，最主要的原因是感觉博客文章不太适合于承载需要持续更新、变化的内容，而且更加突出最后更新时间而非发表时间。也不太能用文档来承载笔记，一是不太方便手动维护笔记目录结构，二是想更多的借助标签树来进行笔记分组。 系统 页面数量 组织方式 内容更新 更关注什么时间 博客文章 无限，持续增加 按发表时间自然排列 较少（修补为主） 发表时间 专栏 无限，持续增加 按时间线性且聚集 较少（修补为主） 发表时间 文档 较少，通常不变 树状目录结构 持续 最后更新时间 笔记 无限，持续增加 标签树 + 引用网 持续 最后更新时间 因此我参考 stellar 主题中的文档系统，加入了与其并列的笔记系统。 笔记本和笔记，主要的页面就像文档系统支持任意多个项目一样，笔记系统也支持任意多个笔记本（notebook）。用户可以在 ./source/_data/notebooks/ 中创建 yaml 文件来定义笔记本，一个 yaml 文件对应一个笔记本。笔记（note）本质就是一个普通的页面（page），在 front-matter 中通过 notebook 字段指定了所属的笔记本的 id。一篇笔记只能归属于一个笔记本。 我增加了以下的页面： 笔记本列表页 /notebooks/：类似于文档系统中的 index_wiki 页，会列出所有的笔记本。 笔记本页即笔记列表页 /notebooks/notebook[/pages/page]/，或笔记本内某个标签的笔记列表页 notebooks/notebook/tags/tag[/pages/page]/：类似于博客的近期发布页面，会分页列出一个笔记本内所有的笔记，或者选定的标签下所有的笔记。 笔记页 /notebooks/notebook/note：笔记内容页面。 笔记本配置类似于文档系统中的项目，在 ./source/_data/notebooks/ 中的一个 yaml 文件定义了一个笔记本。文件名就是笔记本的 id。文件内容示例（跟 wiki 项目类似，但简单很多，只支持了少量的自定义配置）： name: Demotitle: Demo Notebookicon: /images/favicon.pngdescription: 这是一本用来演示的笔记本base_dir: /notes/sort: 1per_page: 10order_by: -updatedlicense: trueshare: truemenu_id: notes# 笔记列表页的左/右侧栏# leftbar: [tagtree, recent]# rightbar: []# 笔记页的左/右侧栏# note_leftbar: [tagtree, recent]# note_rightbar: [toc] 标签树（tagtree）widget在笔记列表页和笔记页，可以在左侧边栏显示当前笔记本的标签树。笔记的标签定义在 front-matter 中的 tags 字段，类似于普通文章。嵌套标签用 / 进行分割，就跟文件系统的目录类似，比如 knowledge/math/probability。一篇笔记可以有任意多个标签。 标签树组件会以树形结构显示出所有的标签及其层级结构，另外可以配置比如是否自动展开所有标签（默认否）、是否自动展开当前标签（默认是）、是否显示标签的 icon（默认是）。用户可以在主题配置中为任何标签配置 icon，默认使用新增的 solar:hashtag-linear icon。 标签树组件看起来大致是这样： 笔记本列表页主体部分是以卡片形式显示的笔记本列表，跟 index wiki 页面类似，支持通过 sort 对笔记本进行排序，但目前不支持笔记本上的 tag。示例： 默认的左侧边栏是 recent 组件，列出所有笔记本中最近更新的几篇笔记。跟 index wiki 页面的 recent 组件类似，会在笔记标题前面加上笔记本的名称。示例： 笔记列表页主体部分是分页的笔记卡片，跟博客的近期发布页面类似，但默认按照笔记的更新时间逆序排列。支持在笔记的 front-matter 中通过 pin 或 sticky 字段来置顶笔记。卡片会显示笔记的更新时间和标签。示例： 笔记卡片支持类似于博客文章的 cover，但目前不支持 poster。示例： 默认的左侧边栏是 tagtree 和 recent 组件。tagtree 组件会高亮当前选中的标签，如果没有选中标签，则高亮「全部笔记」。recent 组件会列出当前笔记本内最近更新的几篇笔记。 搜索框会限定在当前笔记本中进行搜索。暂时不支持仅在当前选中的标签内搜索。 笔记页主体部分就是笔记（本质就是一个 page）的内容。顶部优先展示更新时间，鼠标悬浮时展开发表时间。示例： 底部展示该笔记所属的所有标签，样式类似于博客的标签页，示例： 另外跟博客、文档类似，可以控制是否显示许可协议和分享按钮。 默认的左侧边栏和搜索框跟笔记列表页类似。"},{"title":"更新日志与注意事项","path":"/wiki/stellar/releases.html","content":"版本命名规范：大版本 小版本 修复版本 大版本：较大范围改动和设计调整、重构 小版本：较小范围改动、增加删除功能，也可能包含部分修复 修复版本：仅包含修复或代码优化，可放心无缝升级 如何关注主题更新 例如，您可以在自己博客任意位置用时间线标签显示主题最近一个版本更新内容：% timeline api:https://api.github.xaox.cc/repos/xaoxuu/hexo-theme-stellar/releases?per_page=1 %% endtimeline %"},{"title":"项目进度和近期计划","path":"/wiki/stellar/todo.html","content":""},{"title":"实现博客专栏/专题","path":"/wiki/stellar/topic.html","content":"如果你使用过 Stellar 的 wiki 系统，那么专栏就非常容易了，相当于一个简化版的 wiki 系统，区别是： 无需「上架」动作 文章创建于 blog/source/_posts 文件夹内 按照时间排序，默认最新的排最上面 页面布局类似于普通文章 基本流程1. 创建一个专栏在 blog/source/_data/ 文件夹中创建一个 topic 文件夹，在其中放入各个专栏的描述文件，文件名就是项目的 id： blog/source/_data/topic/id.ymlname: Stellar # 在面包屑导航上会显示较短的名字title: Stellar - 每个人的独立博客 # 在列表页会显示完整的专栏标题description: 关于搭建独立博客相关的知识和经验分享，以及 Stellar 的高级用法、版本更新相关的注意事项。order_by: -date # 默认是按发布日期倒序排序 2. 发布文章在此专栏文章的 md 文件的 front-matter 部分指定所属的专栏 id （即上一步创建的文件名 id.yml） blog/source/_posts/20240114.md---title: 这是文章标题topic: id # 这是专栏id，对应 blog/source/_data/topic/id.yml---文章正文 这个功能的定位是什么？相比分类功能，它更偏向于一个更加有前后关系的文章集合，类似于文档的分页，但是相比文档，它又像文章一样持续增加新页面，一般以时间为排序依据。比分类更加结构化，比文档更加自动化，可以根据自己的需求选择使用不同的功能。 https://xaoxuu.com/blog/20240203/https://xaoxuu.com/blog/20240203/"},{"title":"探索个性化配置","path":"/wiki/stellar/advanced-settings/index.html","content":"主题色支持 HEX HSL 表示颜色 blog/_config.stellar.ymlstyle: ... color: # 动态颜色（会根据明暗主题重设明度值，只用关心色相和饱和度即可） background: hsl(212 16% 98%) # 浅色背景颜色 block: hsl(212 8% 95%) # 块背景颜色 code: hsl(14 100% 48%) # 行内代码颜色 text: hsl(0 0% 20%) # 文本颜色 # 主题色配置（不会根据明暗动态调整，请设置为通用的颜色） theme: hsl(192 98% 55%) # 主题色 accent: hsl(14 100% 57%) # 强调色 link: hsl(207 90% 54%) # 超链接颜色 button: hsl(192 98% 55%) # 按钮颜色 hover: hsl(14 100% 57%) # 按钮高亮颜色 字体 请注意使用字体的版权问题！ 系统字体blog/_config.stellar.ymlstyle: font-size: root: 16px body: .9375rem # 15px code: 85% # 14px codeblock: 0.8125rem # 13px font-family: logo: system-ui, Microsoft Yahei, Segoe UI, -apple-system, Roboto, Ubuntu, Helvetica Neue, Arial, WenQuanYi Micro Hei, sans-serif body: system-ui, Microsoft Yahei, Segoe UI, -apple-system, Roboto, Ubuntu, Helvetica Neue, Arial, WenQuanYi Micro Hei, sans-serif code: Menlo, Monaco, Consolas, system-ui, Courier New, monospace, sans-serif codeblock: Menlo, Monaco, Consolas, system-ui, Courier New, monospace, sans-serif 外部字体要想引用外部字体，你需要先在 _config.yml 中 inject 引入 举例，引用 Noto Serif SC 在 _config.stellar.yml 中写入 blog/_config.stellar.ymlinject: head: - link href=https://fonts.googleapis.com/css2?family=Noto+Serif+SCdisplay=swap rel=stylesheet script: 并在 _config.stellar.yml 中填写你引入的字体名称 blog/_config.stellar.ymlstyle: font-family: body: Noto Serif SC, Microsoft Yahei,..., sans-serif 选择在线字体： https://www.googlefonts.cn/https://www.googlefonts.cn/ 本地字体若您想引用本地字体，举例，引用得意黑（SmileySans-Oblique.ttf）这个字体，先将字体放置于 blog/source/font/ 目录下，然后改动一下主题文件 Blog/themes/stellar/source/css/_custom.styl@font-face font-family: Smiley Sans src: url(/font/SmileySans-Oblique.ttf) font-weight: normal font-style: normal font-family 是你引入的字体家族名，src 中填写字体文件相对于 source 文件夹的路径 同样，你需要在 _config.stellar.yml 中填写你引入的字体名称（font-family） blog/_config.stellar.ymlstyle: font-family: body: Smiley Sans, Microsoft Yahei,..., sans-serif 但是我个人并不推荐引用本地字体，相比于英文字体，中文字体囊括了众多的字符，这也无法避免地导致字体文件体积的增加，如果你想使用自己的字体而找不到在线的字体引入链接，可以自行制作字体的 woff2 切片来减少对网页加载速度的影响。 背景图片此功能在 1.26.4 中支持，可以设置：纯色渐变色图片作为背景。未完全适配，慎用！ blog/_config.stellar.ymlstyle: ... site: background-image: #url(https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.14/image/site-bg1@small.webp) blur-px: 100px # 模糊半径 blur-bg: var(--bg-a75) # 模糊颜色 文本对齐方向blog/_config.stellar.ymlstyle: ... text-align: left # justify/left/center/right 代码块复制blog/_config.stellar.ymlcopycode: enable: true js: /js/plugins/copycode.js default_text: Copy # 按钮显示文字 success_text: Copied # 复制成功信息 圆角大小这个功能在 1.18.1 版本后开始支持。 blog/_config.stellar.ymlstyle: ... border-radius: card: 12px # 卡片圆角 block: 12px # 块圆角 bar: 6px # 导航栏圆角 image: 6px # 图片圆角 页面缓入效果blog/_config.stellar.yml# 默认关闭scrollreveal: enable: false js: https://gcore.jsdelivr.net/npm/scrollreveal@4.0.9/dist/scrollreveal.min.js distance: 4px # 执行距离 duration: 400 # ms # 执行时长 interval: 100 # ms # 执行间隔（时间） scale: 0.1 # 0.1~1 # 执行方式（缩放） 此效果会和图片懒加载插件冲突，导致部分卡片和footer可能加载不出来 图片懒加载blog/_config.stellar.yml# 默认打开lazyload: enable: true # [hexo clean hexo s] is required after changing this value. js: https://gcore.jsdelivr.net/npm/vanilla-lazyload@17.3.1/dist/lazyload.min.js transition: blur # blur, fade 加载提示加载动态时间线、动态友链等显示提示 blog/_config.stellar.yml# 默认打开loading: loading: 正在加载 error: 加载失败，请稍后重试。 渐变色这个功能在 1.18.2 版本后开始支持。 您可以在 wiki 项目的封面开始按钮处设置渐变色 CSS 代码 blog/_config.stellar.ymlstyle: ... gradient: # https://webgradients.com/ start: linear-gradient(to right, #92fe9d 0%, #00c9ff 50%, #92fe9d 100%) search: linear-gradient(to right, #04F3FF, #08FFC6, #DDF730, #FFBD19, #FF1FE0, #C418FF, #04F3FF) 当然，如果只想设置纯色的话可以直接设置单色，支持 HEX 和 HSL，例如 search: hsl(212 16% 98%) 顶部 tab 栏这个功能在 1.25.0 版本重构。 blog/_config.stellar.ymlsite_tree: blog: nav_tabs: # 近期发布 分类 标签 归档 and ... 朋友文章: /friends/rss/ # 这里填写的链接要与对应页面一致，否则可能无法正确高亮 站点地图页面底部的站点导航，你也可以在 content 中自定义一些文字信息，支持 Markdown 格式。 footer: social: # github: # icon: img src=https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/social/08a41b181ce68.svg/ # url: / # music: # icon: img src=https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/social/3845874.svg/ # url: / # unsplash: # icon: img src=https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/social/3616429.svg/ # url: / # comments: # icon: img src=https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.12/social/942ebbf1a4b91.svg/ # url: /about/#comments sitemap: # 博客: # - [近期](/) # - [分类](/categories/) # - [标签](/tags/) # - [归档](/archives/) # 项目: # - [开源库](/) # 社交: # - [友链](/) # - [留言板](/) # 更多: # - [关于本站](/) # - [GitHub](/) content: | # 支持 Markdown 格式 本站由 [author.name](/) 使用 [theme.name theme.version](theme.tree) 主题创建。 本博客所有文章除特别声明外，均采用 [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/) 许可协议，转载请注明出处。 span class=jinrishici-sentence/span script src=https://sdk.jinrishici.com/v2/browser/jinrishici.js charset=utf-8/script # 主题用户越多，开发者维护和更新的积极性就越高，如果您喜欢本主题，请在适当的位置显示主题信息和仓库链接以表支持。 自定义样式如果要修改样式，您需要删掉主题的样式文件的 CDN 链接，使用本地文件，然后在 themes/stellar/source/css/_custom.styl 中进行修改。 使用其它 highlight.js 代码高亮主题Hexo 官方有文档：https://hexo.io/docs/syntax-highlight.html#hljs Tip: When line_number is set to false, wrap is set to false and hljs is set to true, you can then use highlight.js theme directly in your site. 以 atom-one-dark 主题为例，翻译过来就是 _config.yml 找到 highlight 并修改为： highlight: enable: true line_number: false auto_detect: false tab_replace: wrap: false hljs: true 然后再找到 highlightjs_theme 修改 css 链接： blog/_config.stellar.ymlstyle: codeblock: highlightjs_theme: https://gcore.jsdelivr.net/gh/highlightjs/cdn-release@11.9.0/build/styles/atom-one-dark.min.css 外部文件注入在主题配置文件中进行修改 inject.head 以在 head 标签末尾处注入代码，修改 inject.script 以在 body 标签末尾处注入代码。 blog/_config.stellar.ymlinject: head: - meta name=msapplication-TileColor content=#2d89ef - meta name=msapplication-config content=https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/favicon/browserconfig.xml - meta name=theme-color content=#ffffff script: - script async src=https://gcore.jsdelivr.net/npm/jquery@3.5/dist/jquery.min.js/script 不蒜子统计插件直接贴到要显示的地方（支持 markdown 的组件）就行： blog/_config.stellar.ymlfooter: content: | span id=busuanzi_container_site_pv本站总访问量span id=busuanzi_value_site_pv/span次/span script async src=//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js/script"},{"title":"评论插件配置（6个）","path":"/wiki/stellar/comments/index.html","content":"BeaudarBeaudar 是 Utterances 的中文版本，相比 Utterances 有更多的体验优化，可以按时间倒序排序。 blog/_config.stellar.ymlcomments: service: beaudar beaudar: repo: xaoxuu/blog-comments Beaudar 的配置方法很简单，创建一个仓库，在仓库中创建一个 域名白名单文件，然后在 此处 授权安装即可。 utterancesA lightweight comments widget built on GitHub issues. Use GitHub issues for blog comments, wiki pages and more! blog/_config.stellar.ymlcomments: service: utterances utterances: repo: xaoxuu/blog-comments utterances 的配置方法很简单，创建一个仓库，在仓库中创建一个 域名白名单文件，然后在 此处 授权安装即可。 giscusgiscus 是由 GitHub Discussions 驱动的评论系统。让访客借助 GitHub 在你的网站上留下评论和反应吧！本项目受 utterances 强烈启发。 blog/_config.stellar.ymlcomments: service: giscus # giscus # https://giscus.app/zh-CN giscus: src: https://giscus.app/client.js data-repo: xxx/xxx # [在此输入仓库] data-repo-id: # [在此输入仓库 ID] data-category: # [在此输入分类名] data-category-id: data-mapping: pathname data-strict: 0 data-reactions-enabled: 1 data-emit-metadata: 0 data-input-position: top # top, bottom data-theme: preferred_color_scheme data-lang: zh-CN data-loading: lazy crossorigin: anonymous Twikooblog/_config.stellar.ymlcomments: service: twikoo twikoo: envId: https://xxx # vercel函数 https://twikoo.js.orghttps://twikoo.js.org Walineblog/_config.stellar.ymlcomments: service: waline waline: js: https://unpkg.com/@waline/client@v2/dist/waline.js css: https://unpkg.com/@waline/client@v2/dist/waline.css # Waline server address url, you should set this to your own link serverURL: https://xxx # waline 地址 # If false, comment count will only be displayed in post page, not in home page commentCount: true # Pageviews count, Note: You should not enable both `waline.pageview` and `leancloud_visitors`. pageview: false # Custom locales locale: placeholder: # 输入框内提示文字 # Custom emoji emoji: - https://gcore.jsdelivr.net/gh/norevi/waline-blobcatemojis@1.0/blobs # - https://unpkg.com/@waline/emojis@1.1.0/weibo # - https://unpkg.com/@waline/emojis@1.1.0/alus # - https://unpkg.com/@waline/emojis@1.1.0/bilibili # - https://unpkg.com/@waline/emojis@1.1.0/qq # - https://unpkg.com/@waline/emojis@1.1.0/tieba # - https://unpkg.com/@waline/emojis@1.1.0/tw-emoji # - https://unpkg.com/@waline/emojis@1.1.0/bmoji https://waline.js.orghttps://waline.js.org Artalkblog/_config.stellar.ymlcomments: service: artalk # Artalk # https://artalk.js.org/ artalk: css: https://unpkg.com/artalk@2.7/dist/Artalk.css js: https://unpkg.com/artalk@2.7/dist/Artalk.js server: # 后端服务地址 placeholder: darkMode: auto https://artalk.js.orghttps://artalk.js.org 评论的灵活用法评论区懒加载该功能于 1.29.0 支持。 blog/_config.stellar.ymlcomments: service: # beaudar, utterances, giscus, twikoo, waline, artalk lazyload: # true 共用评论数据如果您有多个页面需要共用评论数据，可以在 front-matter 中覆盖评论参数，例如： blog/source/about/index.mdtitle: 关于beaudar: issue-term: 留言板 blog/source/friends/index.mdtitle: 友链beaudar: issue-term: 留言板 使用其它评论数据如果您有多个页面需要另外一个数据库的评论数据，以 Beaudar 为例，您可以这样： blog/source/wiki/stellar/index.mdtitle: 快速开始您的博客之旅giscus: data-repo: xaoxuu/hexo-theme-stellar data-mapping: number data-term: 226 对于其他评论例如 twikoo waline artalk，您可以设置 comment_id 为相同的值使得不同页面共用同一评论区 blog/source/wiki/stellar/index.mdtitle: 快速开始您的博客之旅comment_id:"},{"title":"front-matter 全部字段索引","path":"/wiki/stellar/pages/front-matter.html","content":"所有字段均为可选，如有遗漏或错误欢迎点击右侧的【编辑本文】提交 PR 进行补充。 Hexo 内置字段 参数 描述 默认值 layout 布局 config.default_layout title 标题 文章的文件名 date 建立日期 文件建立日期 updated 更新日期 文件更新日期 sticky 置顶（数字越大越靠前） comments 开启文章的评论功能 true tags 标签（不适用于分页） categories 分类（不适用于分页） permalink 覆盖文章的永久链接，永久链接应该以 / 或 .html 结尾 null excerpt 纯文本的页面摘要。使用 该插件 来格式化文本 disableNunjucks 启用时禁用 Nunjucks 标签 % % 和 标签插件 的渲染功能 false lang 设置语言以覆盖 自动检测 继承自 _config.yml published 文章是否发布 对于 _posts 下的文章为 true，对于 _draft 下的文章为 false 详见：https://hexo.io/zh-cn/docs/front-matter Stellar 特有字段 参数 描述 默认值 可用版本 wiki 该页面所属的 wiki 项目 menu_id 高亮的菜单按钮 id sidebar 侧边栏配置 1.0.0 ~ 1.26.8 leftbar 左侧边栏配置 1.27.0 ~ rightbar 右侧边栏配置 1.27.0 ~ comment_title 评论区标题 poster 文章封面，包含 topicheadlinecaptioncolor 子配置 banner 页面顶部横幅背景 banner_info 横幅信息，包含 avatartitlesubtitle 子配置 logo 左侧边栏顶部 logo 区域信息，包含 iconavatartitlesubtitle 子配置 indent 段落是否缩进 false topic 所属话题专栏 1.25.0 ~ author 该文章的作者 1.23.0 ~ type 页面类型 1.26.0 ~ references 参考资料 h1 页内标题 title 1.26.0 ~ breadcrumb 面包屑导航 true indexing 页面能否是否能被搜索 true 第三方插件 参数 描述 类型 mathjax 渲染文章公式 boolean katex 同上 boolean mermaid 渲染图表 boolean"},{"title":"编写文章以及独立页面","path":"/wiki/stellar/pages/index.html","content":"文章类型文章类型决定布局风格，有两种风格可选，tech: 默认技术类文章, story: 图文类文章，文字和段落间增距大。 blog/_config.stellar.ymlarticle: type: tech # tech/story 可以在 front-matter/topic/wiki 中覆盖此参数。 文章封面在文章列表页面或者其他位置显示的文章摘要卡片上面的图片称之为「文章封面」 自动生成封面根据 tags 作为关键词为每一篇文章在线搜索封面： blog/_config.stellar.ymlarticle: auto_cover: true 引用外部图片在文章的 front-matter 中写上 cover: xxx 即可。例如： blog/source/_posts/xxx.md---# 本地图片路径为 blog/source/assets/xaoxuu/blog/2020-0927a@1x.svg# 也可以直接引用图片直链 https://xxx.jpgcover: https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/xaoxuu/blog/2020-0927a@1x.svg--- 显示效果 上面这种方式会显示title与description或者摘要，若你想要图片全显示，可以加入如下参数： blog/source/_posts/xxx.md---cover: https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/xaoxuu/blog/2020-0927a@1x.svg # 必选poster: # 海报（可选，全图封面卡片） topic: 标题上方的小字 # 可选 headline: 大标题 # 必选 caption: 标题下方的小字 # 可选 color: 标题颜色 # 可选，默认为跟随主题的动态颜色 # white,red...--- Stellar v1.14.0 更换 cover-title cover-cat cover-subtitle cover-text-color 为 poster 为了显示美观，建议 topic 和 caption 选择其一与 headline 搭配使用。 显示效果 填写 topic 与 headline 时大标题位于上方 只填写 headline 或填写 headline 与 caption 时大标题位于下方 内容摘要自动生成摘要建议您通过 description 或者 excerpt 方式生成摘要，但如果您希望自动从文章内容截取一定字数的文字作为摘要，可以这样设置： blog/_config.stellar.ymlarticle: auto_excerpt: 200 手动设置摘要一篇文章开头一段文字描述就是摘要，摘要和正文用 !-- more -- 隔开，前后一定要有空行。例如： blog/source/_posts/xxx.md---cover: https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/xaoxuu/blog/2020-0927a@1x.svg---在心率管家默默无闻地上线了一年多之后，现在终于打算来好好聊聊关于手机摄像头测量心率的那些事。本文参考了很多前辈的文章，将在文末列出。!-- more --后面是正文部分，在主页看不到。 AI摘要基于 tianli_gpt 前端项目 Post-Summary-AI _config.stellar.yml# AI 摘要# https://github.com/qxchuckle/Post-Summary-AItianli_gpt: enable: #true js: https://jsd.onmicrosoft.cn/gh/qxchuckle/Post-Summary-AI@6.0/chuckle-post-ai.min.js field: post # all, post, wiki key: 5Q5mpqRK5DkwT1X9Gi5e # tianli_gpt key total_length: 1000 # 设置提交的字数限制，默认为1000字，上限为5000，超过5000字符将被截断 typewriter: true # 打字机动画 summary_directly: true # 是否直接显示摘要，否则显示 AI 简介 rec_method: all # all, web # 文章推荐方式，all：匹配数据库内所有文章进行推荐，web：仅当前站内的文章，默认all hide_shuttle: true # 是否隐藏矩阵穿梭 summary_toggle: false # 是否开启切换简介功能，经过一些处理后，重新生成一份简介，这将消耗key字数 interface: # AI 信息展示 name: AI摘要 introduce: 我是文章辅助AI: QX-AI，点击下方的按钮，让我生成本文简介、推荐相关文章等。 version: TianliGPT button: [介绍自己, 推荐文章, 生成摘要, 矩阵穿梭] # 底部按钮文字 如何获取 tianliGPT_key：到 爱发电 中购买，购买完成后，进入 网页后台管理 绑定key并添加自己的站点 key与博客地址为绑定状态，所以本地调试时是无法接收到数据的。 文章模板使用 Hexo 自带模板实现命令行创建新文章时自动生成相关信息。 根目录下 scaffolds 文件夹中编辑 post.md 的 font-matter ，根据自己的需要增加你想要配置的内容 blog/scaffolds/post.md---# 基本信息title: title date: date tags: []categories: []description: # excerpt 也可 # 封面cover: banner: poster: # 海报（可选，全图封面卡片） topic: 标题上方的小字 # 可选 headline: 大标题 # 必选 caption: 标题下方的小字 # 可选 color: 标题颜色 # 可选# 插件sticky: # 数字越大越靠前mermaid:katex: mathjax: # 可选topic: # 专栏 idauthor: references:comments: # 设置 false 禁止评论indexing: # 设置 false 避免被搜索breadcrumb: # 设置 false 隐藏面包屑导航leftbar: rightbar:h1: # 设置为 隐藏标题type: # tech/story--- 文章页横幅图片文章页面顶部区域可以显示长长的横幅图片，设置方法如下： blog/source/_posts/xxx.mdbanner: https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/xaoxuu/blog/2020-0927a@1x.svg 指定一级标题默认的一级标题是文章的 title，如果希望使用别的文字作为一级标题，可以指定 h1，例如： blog/source/_posts/xxx.md---h1: 快速开始--- 隐藏文章标题同上述操作，但是 h1 设置为空字符串即可： blog/source/_posts/xxx.md---h1: --- 文章索引与推荐文章如果有分类和标签就会自动在主页出现「分类」、「标签」选项卡实现分类浏览，不需要手动添加页面。 文章分类在文章列表页面会显示文章所属的第一级分类，例如： blog/source/_posts/xxx.md---categories: [设计开发, iOS开发]--- 这样写就只会显示「设计开发」一级分类，而在文章页面顶部则会显示完整的面包屑导航。 文章标签文章标签目前不可见，用于关键词、搜索、按标签检索、相关文章推荐等功能，例如： blog/source/_posts/xxx.md---tags: [iOS, 心率]--- 相关文章推荐要实现相关文章推荐功能，您需要安装插件： 然后在主题配置文件中开启： blog/_config.stellar.ymlarticle: # npm i hexo-related-popular-posts related_posts: enable: true title: 您可能感兴趣的文章 开启后会在每篇文章的下方推荐相同类型的文章。 参考资料用 markdown 格式填写引用的文章，注意要写在引号中： blog/source/_posts/xxx.md---references: - [心跳之旅—💗—iOS用手机摄像头检测心率(PPG)](https://punmy.cn/2016/07/28/15231176397746.html) - [PPG光电容积脉搏波描记法技术概况](https://www.jianshu.com/p/695c131abfa5) ...--- 效果见这篇文章： https://xaoxuu.com/blog/20200927/#referenceshttps://xaoxuu.com/blog/20200927/#references 许可协议你可以更改协议内容或者自定义其他选项，支持 MarkDown 语法。 blog/_config.stellar.ymlarticle: license: 本文采用 [署名-非商业性使用-相同方式共享 4.0 国际](https://creativecommons.org/licenses/by-nc-sa/4.0/) 许可协议，转载请注明出处。 若你配置了作者数据 _data/authors.yml 和文章作者，可以在 license 中使用 author.name 来自动替换为当前文章作者名字。 blog/_config.stellar.ymlarticle: license: 本文由author.name编写，采用... 分享链接分享至微信会生成对应的页面二维码，weibo 和 email 会自动跳转到对应软件或网页，link 会拷贝当前页面链接至剪切板。 blog/_config.stellar.ymlarticle: share: # [wechat, weibo, email, link] 覆盖 OpenGraph如果分享到社交平台的缩略图不理想，可以通过这个特性覆盖为自己想要的： blog/source/_posts/xxx.mdopen_graph: image: https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/xaoxuu/blog/2022-1029a@2x.webp 更多的独立页面Stellar 同时具有博客和 Wiki 两个大模块，为了能够正确进行导航栏高亮，引入了 menu_id 来进行区分，可以在 front-matter 中指定 menu_id 来使某个菜单按钮处于选中状态。 例如您有关于、友链两个页面，都希望高亮「更多」按钮： blog/source/about/index.md---menu_id: moretitle: 关于--- blog/source/friends/index.md---menu_id: moretitle: 友链--- 在主题配置文件中设置导航栏： blog/_config.stellar.ymlmenubar: columns: 4 # 一行多少个 items: # 可按照自己需求增加，符合以下格式即可 ... - id: more theme: title: 更多 icon: url: /more/ 友链页面友链被设计成标签，您可以在任何页面任何位置插入友链，详见： #友链标签https://xaoxuu.com/wiki/stellar/tag-plugins/#友链标签 关于页面没有单独的关于页面布局，您可以自由组合丰富的标签来实现个性化的关于页面，例如：about、tabs、navbar、quot、timeline 标签。"},{"title":"侧边栏配置","path":"/wiki/stellar/sidebar/index.html","content":"Logo左上角的 logo 和标题取自站点根目录的配置文件： blog/_config.ymltitle: 网站名称avatar: 头像 设置鼠标指上 subtitle 后翻转另一行字（您可以将鼠标移至左上角的Stellar查看效果） blog/_config.stellar.ymllogo: subtitle: # 文字1 | 文字2 (鼠标放上去会切换到文字2) 如果您想用一个图片作为 logo，可以直接在主题配置文件 logo 中设置： blog/_config.stellar.ymllogo: avatar: [config.avatar](/about/) # you can set avatar link in _config.yml or [https://xxx.png](/about/) title: [config.title](/) # you can set html tag like: [img no-lazy height=32px src=xxx/](/) Background（背景）此功能在 1.26.0 中支持，可以设置：纯色渐变色图片作为背景。 blog/_config.stellar.ymlstyle: ... leftbar: background-image: url(https://gcore.jsdelivr.net/gh/cdn-x/placeholder@1.0.13/image/sidebar-bg1@small.jpg) blur-px: 100px # 模糊半径 blur-bg: var(--bg-a60) # 模糊颜色 关于linear-gradient的用法示例 /* 渐变轴为 45 度，从蓝色渐变到红色 */linear-gradient(45deg, blue, red);/* 从右下到左上、从蓝色渐变到红色 */linear-gradient(to left top, blue, red);/* 色标：从下到上，从蓝色开始渐变，到高度 40% 位置是绿色渐变开始，最后以红色结束 */linear-gradient(0deg, blue, green 40%, red);/* 颜色提示：从左到右的渐变，由红色开始，沿着渐变长度到 10% 的位置，然后在剩余的 90% 长度中变成蓝色 */linear-gradient(.25turn, red, 10%, blue);/* 多位置色标：45% 倾斜的渐变，左下半部分为红色，右下半部分为蓝色，中间有一条硬线，在这里渐变由红色转变为蓝色 */linear-gradient(45deg, red 0 50%, blue 50% 100%); Navbar（主导航栏）自己可以增加任意的键值对，键：就是 menu_id，后面需要用到，值：就是显示的 md 链接，方括号内支持文字和图片标签 blog/_config.stellar.yml# 侧边栏主功能导航菜单menubar: columns: 4 # 一行多少个 items: # 可按照自己需求增加，符合以下格式即可 # - id: post # 页面中高亮的 menu_id # theme: #1BCDFC # 高亮时的颜色，仅 svg 中 fill=currentColor 时有效 # icon: solar:documents-bold-duotone # 支持 svg/img 标签，可以定义在 icons.yml 文件中，也支持外部图片的 URL # title: 博客 # 标题 # url: / # 跳转链接，支持相对路径和绝对路径 # - id: wiki # theme: #3DC550 # icon: solar:notebook-bookmark-bold-duotone # title: 文档 # url: /wiki/ # - id: explore # theme: #FA6400 # icon: solar:planet-bold-duotone # title: 探索 # url: /explore/ # - id: social # theme: #F44336 # icon: solar:chat-square-like-bold-duotone # title: 社交 # url: /friends/ 侧边栏宽度有限，如何在不影响观感的情况下设置更多的主导航栏按钮呢？建议设置一个「更多」按钮，然后在「更多」页面的侧边栏放上列表组件。 Search（搜索）local_searchalgolia_searchothers在 1.17.1 版本后开始支持，无需安装插件，默认开启。 blog/_config.stellar.yml# 文章搜索search: service: local_search # local_search, todo... local_search: field: all # post, page, all path: /search.json # 搜索文件存放位置 content: true # 是否搜索内容 skip_search: [] # 指定 path 中的内容不被搜索。 codeblock: true # 是否搜索代码块（需要content: true) 如果想要过滤某些页面，可以在 front-matter 中设置 indexing: false 来避免被搜索索引，或者在 local_search 中指定 skip_search 的空数组，格式如下 blog/_config.stellar.ymlskip_search: [about*, post/2023*] 需要使用通配符 * 来匹配路径，以上配置将会忽略所有以 about 开头和以 post/2023 开头的页面。首先你的需要是技术类博客或者项目文档，然后你才能申请 DocSearch ，会有人工审核。 https://docsearch.algolia.com/apply/https://docsearch.algolia.com/apply/ 几个小时之后就会回复你一封邮件，附有有你的 appId apiKey indexName 填入其中即可。 blog/_config.stellar.ymlsearch: service: algolia_search algolia_search: appId: xxxxx apiKey: xxxxxxxxxxxx indexName: xxxxxxxx请提交PR… 在 _config.stellar.yml 中设置搜索选项，现在 search 组件的位置固定，暂不支持更改。 但你仍可以在某些页面中通过覆盖 search 组件的 filter 参数来定制化搜索范围，例如 wiki 或 笔记 页面的配置中: blog/source/_data/wiki/xxx.ymlsearch: filter: /wiki/stellar/ placeholder: 在 Stellar 中搜索... Footer（页脚）blog/_config.stellar.ymlfooter: social: github: icon: img src=https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/placeholder/social/08a41b181ce68.svg/ url: https:// music: icon: img src=https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/placeholder/social/3845874.svg/ url: https:// unsplash: icon: img src=https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/placeholder/social/3616429.svg/ url: https:// comments: icon: img src=https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/placeholder/social/942ebbf1a4b91.svg/ url: https:// 自定义组件Stellar 支持丰富的自定义小组件，详见这篇文档： https://xaoxuu.com/wiki/stellar/widgets/https://xaoxuu.com/wiki/stellar/widgets/"},{"title":"使用标签组件增强阅读体验","path":"/wiki/stellar/tag-plugins/index.html","content":"Stellar 内置的标签组件和 Hexo 官方的一样使用空格分隔多个参数，所以如果参数内容中需要出现的空格被意外分隔开了的时候，请使用 nbsp; 代替。为了方便理解，本文档语法格式中的可选参数用方括号括起来，键值对参数用冒号分隔开，例如： % image src [description] [download:bool/string] % 就表明第一个参数是图片链接，第二个参数是图片描述，而 download 是可选参数，并且值是布尔或字符串类型，第二三个参数为可选参数。 了解参数解析规则 以图片标签为例，使用空格分隔开之后得到一个数组，如果图片描述文字中有空格，多分出来的这些「参数」被合并到最后一个「非键值对参数」中，什么是「非键值对参数」呢？举个例子您就明白了：% image https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/wiki/stellar/photos/183e71e0ad995.jpg 来自印度的 Rohit Vohra 使用 iPhone 12 Pro Max 拍摄。 download:https://www.apple.com.cn/newsroom/images/product/iphone/lifestyle/Apple_ShotoniPhone-rohit_vohra_12172020.zip ratio:1960/1468 %这个例子中，download:https://xxxx 是有冒号分隔开的，download 为键，后面的网址为值，所以叫做「键值对参数」；与此相对的，没有冒号分隔的就叫做「非键值对参数」。键值对参数可以放在任何位置，我可以通过匹配键来解析，而非键值对参数则只能通过顺序解析，所以它们必须和文档中要求的前后顺序一致。一般核心的、重要的参数会设置成非键值对参数，而可选参数设置成键值对参数。"},{"title":"网站和主题基本信息配置","path":"/wiki/stellar/theme-settings/index.html","content":"站点信息Stellar 会读取站点根目录下的 _config.yml 文件中的一些信息来生成您的网站，所以您需要修改以下值： blog/_config.ymltitle: 您的网站名称avatar: 您的头像链接favicon: 您的网站icon# subtitle: # subtitle 已移至主题配置中# 多语言language: - zh-CN - en 更多关于 Hexo 文件的配置请移步官方文档 https://hexo.io/zh-cn/docs/configurationhttps://hexo.io/zh-cn/docs/configuration 多语言设置主题中的默认文案都支持多语言，以简体中文为例，您可以在 themes/stellar/languages/zh-CN.yml 中修改文案。 更改网站优先语言，需要在站点根目录下的配置文件中进行修改： blog/_config.ymllanguage: - zh-CN - en - zh-TW 创建主题配置文件在博客根目录的 _config.yml 文件旁边新建一个文件： _config.stellar.yml ，在这个文件中的配置信息优先级高于主题文件夹中的配置文件。 头部标签自定义Open Graph默认生成 Open Graph 标签，如果您不希望生成它，可以在主题配置文件中关闭： blog/_config.stellar.ymlopen_graph: enable: true twitter_id: # for open_graph meta"},{"title":"使用图表类插件","path":"/wiki/stellar/third-party/graph.html","content":"mermaid安装插件： 使用前需要在 Markdown 文件开头加入： _posts/xxx.md---mermaid: true--- 演示效果代码示例graph LR A(Section A) -->|option 1| B(Section A) B -->|option 2| C(Section C) gitGraph commit commit branch develop commit commit commit checkout main commit commit https://mermaid.js.org/intro/https://mermaid.js.org/intro/"},{"title":"使用「katex」插件","path":"/wiki/stellar/third-party/katex.html","content":"使用前需要在 Markdown 文件开头加入 _posts/xxx.md---katex: true--- 演示效果代码示例$$\\sum_{i0}^n i^2 \\frac{(n^2+n)(2n+1)}{6}$$_posts/xxx.md$$\\sum_i=0^n i^2 = \\frac(n^2+n)(2n+1)6$$"},{"title":"使用「mathjax」插件","path":"/wiki/stellar/third-party/mathjax.html","content":"使用前需要在 Markdown 文件开头加入 _posts/xxx.md---mathjax: true--- 演示效果代码示例$$\\sum_{i0}^n i^2 \\frac{(n^2+n)(2n+1)}{6}$$_posts/xxx.md$$\\sum_i=0^n i^2 = \\frac(n^2+n)(2n+1)6$$"},{"title":"使用「memos」极简版","path":"/wiki/stellar/third-party/memos.html","content":"需要有自己的 memos 账号，可以在别人部署的 memos 上注册，或者自建 memos 服务，详见官方文档： https://www.usememos.comhttps://www.usememos.com 作为侧边栏组件使用创建个人的 memos 时间线组件blog/source/_data/widgets.ymltimeline: layout: timeline title: 近期动态 api: https://memos.xaox.cc/api/v1/memo?creatorId=1limit=10 type: memos hide: user,footer 创建多人的 memos 时间线组件blog/source/_data/widgets.ymltimeline: layout: timeline title: 近期动态 api: https://s.dusays.com/api/v1/memo/all?limit=10 type: memos hide: footer 作为标签组件使用创建个人的 memos 时间线组件% timeline api:https://memos.xaox.cc/api/v1/memo?creatorId=1limit=10 type:memos avatar:https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/xaoxuu/avatar/rect-256@2x.png %% endtimeline % 创建多人的 memos 时间线组件% timeline api:https://s.dusays.com/api/v1/memo/all?limit=10 type:memos %% endtimeline %"},{"title":"侧边栏组件的配置与使用（9个）","path":"/wiki/stellar/widgets/index.html","content":"实现并显示一个小组件需要两个步骤： 【配置】在组件库中声明组件 【使用】在需要的位置调用 组件库在 _data/widgets.yml 文件中，需要自己创建，内容形如： 我的小组件1: layout: 小组件布局模板 ...(其它属性) 使用的地方有：【主题配置】、【项目配置】、【页面】，后者可以覆盖前者，例如： blog/source/_posts/xxx.md---leftbar: [我的小组件1, 我的小组件2]--- 组件库在创建组件时，您可以使用以下这些 layout 布局： toc 这是文章文档的目录树组件，显示文章和文档的目录结构： blog/source/_data/widgets.ymltoc: layout: toc list_number: false # 是否显示序号 min_depth: 2 # 建议不要低于 2 即从 H2 标签开始解析（H1标签用于文章大标题） max_depth: 5 # 5 代表最多解析到 H5 标签 fallback: recent # Use a backup widget when toc does not exist. collapse: false # true / false / auto (始终折叠/不折叠/自动折叠) toc 的 fallback 默认是 recent，即一篇文章没有 TOC 的时候会显示一个 recent recent blog/source/_data/widgets.ymlrecent: layout: recent rss: # /atom.xml # npm i hexo-generator-feed limit: 5 # Count of posts 在 wiki 板块显示的是最近更新的 wiki 页面，其余地方显示最近更新的文章。 hexo 的覆盖规则是合并而不是替换，所以若不想使用 recent，除了在 _config.stellar.yml 中删除 recent 你还需要将此处的 recent 置空，即 blog/source/_data/widgets.ymlrecent:# layout: recent# rss: # /atom.xml # npm i hexo-generator-feed# limit: 5 # Count of posts 然后自己需要的地方用自己另建的一个 my_recent 组件 blog/source/_data/widgets.ymlmy_recent: layout: recent ... related 相关文档组件，用于显示具有相同 tags 的其它项目列表，暂不支持自定义内容： Stellar 1.12.0 已将 wiki_more，更名为 related blog/source/_data/widgets.ymlrelated: layout: related linklist columns 为1显示为列表，2是每两个按钮放一行，icon 和 title 会同时显示，大于2则只显示 icon blog/source/_data/widgets.ymllinklist: layout: linklist columns: 1 items: - icon: svg.../svg # 或者 icons.yml 中设置的 icon 名称 title: 关于 url: /about/ markdown 这是一个自由度很高的标签，可以显示 markdown 文本内容： blog/source/_data/widgets.ymlwelcome: layout: markdown title: 欢迎欢迎 linklist: # 与 linklist 组件写法相同 columns: 1 items: - icon: title: url: content: | 欢迎使用 [Stellar](https://github.com/xaoxuu/hexo-theme-stellar/) 主题，下面是您的入门指南，祝您使用愉快！ br **第一步** 创建 `blog/_config.stellar.yml` 文件，在此文件中填写需要自定义的主题配置。 br **第二步** 创建 `blog/source/_data/widgets.yml` 文件，此文件中填写需要自定义的侧边栏组件，例如 `welcome` 组件。 br 如果有任何疑问，请先查阅 [文档](https://xaoxuu.com/wiki/stellar/)，如果文档中没有提供，请提 [issue](https://github.com/xaoxuu/hexo-theme-stellar/issues/) 向开发者询问。 src: # 可以设置外部 md 文件链接 linklist 显示为嵌套在 md 组件中，效果参考 https://xaoxuu.comhttps://xaoxuu.com tagcloud 标签云组件： blog/source/_data/widgets.ymltagcloud: layout: tagcloud title: 标签云 # 标签云配置 min_font: 12 max_font: 24 amount: 100 orderby: name order: 1 # 1, sac 升序；-1, desc 降序 color: false # 使用颜色 start_color: # 开始的颜色。您可使用十六进位值（#b700ff），rgba（rgba(183, 0, 255, 1)），hsla（hsla(283, 100%, 50%, 1)）或 颜色关键字。此变量仅在 color 参数开启时才有用。 end_color: # 结束的颜色。您可使用十六进位值（#b700ff），rgba（rgba(183, 0, 255, 1)），hsla（hsla(283, 100%, 50%, 1)）或 颜色关键字。此变量仅在 color 参数开启时才有用。 show_count: false # 显示每个标签的文章总数 ghuser 显示 GitHub 用户基础信息卡片： blog/source/_data/widgets.ymlghuser: layout: ghuser username: github # your github login username avatar: true # show avatar or not menu: true # show menu or not ghrepo 显示 GitHub 仓库基础信息，需要搭配 repo 一起使用： blog/source/_data/widgets.ymlghrepo: layout: ghrepo 需要在需要显示的文章页面的 front-matter 中按照如下格式写上仓库持有者和仓库名： blog/source/_posts/xxx.md---repo: xaoxuu/hexo-theme-stellar--- 如果需要显示在 wiki 项目中，则在 _data/wiki/projects.yml 中填写到对应项目的信息中： blog/source/_data/wiki/projects.ymlname: Stellartitle: Stellarsubtitle: 每个人的独立博客 | Designed by xaoxuurepo: xaoxuu/hexo-theme-stellar... timeline 动态说说微博动态时间线组件，这个功能在 1.12.0 版本后开始支持： 动态数据是从 GitHub Issues 中拉取的，使用方法为： 在 widgets.yml 中新建配置 blog/source/_data/widgets.ymltimeline: layout: timeline title: 近期动态 api: https://api.github.xaox.cc/repos/xaoxuu/hexo-theme-stellar/issues # 若你想限制数量，在api链接后面加上?per_page=1指限制为1条 user: # 是否过滤只显示某个人发布的内容，如果要筛选多人，用英文逗号隔开 hide: # title,footer # 隐藏标题或底部 # 此功能需要 Stellar v1.13.0这个功能在 1.18.0 版本后开始支持： blog/source/_data/widgets.ymlweibo: layout: timeline title: 微博动态 api: https://raw.githubusercontent.com/GitHub用户名/仓库名/output/output/tweets.json # 你的微博爬取数据文件地址 type: weibo limit: 20 无论是哪种动态数据，你都可以在 _config.stellar.yml 中的 site_tree 中设置引用 blog/_config.stellar.ymlsite_tree: ...: leftbar: welcome, recent, 朋友圈, weibo 或者在你需要显示的页面引入，页面内引入优先于配置文件引入： blog/source/_posts/xxx.md---leftbar: [ghuser, 朋友圈]--- 配置默认布局在 1.26.0 版本中，站点主结构树有较大的变化，支持自定义每种页面的组件显示情况，侧边栏会按照指定的顺序从组件库中读取组件并显示： 列表类页面列表类页面是指博客文章列表、专栏列表、wiki 项目列表等页面的配置。 这里解释一下 base_dir 是什么意思，比如说当我创建一个 wiki 项目或者笔记页面时，会自动生成一个总项目列表，该页面的默认路径是 /wiki ，你可以 点此查看 该页面，改变 base_dir 即改变该路径。 blog/_config.stellar.yml# 站点主结构树site_tree: # -- 列表类页面 -- # # 主页配置 home: leftbar: welcome, recent rightbar: timeline # 博客列表页配置 index_blog: base_dir: blog # 只影响自动生成的页面路径 menu_id: post # 未在 front-matter 中指定 menu_id 时，layout 为 post 的页面默认使用这里配置的 menu_id leftbar: welcome, recent # for categories/tags/archives rightbar: timeline nav_tabs: # 近期发布 分类 标签 专栏 归档 and ... # 朋友文章: /friends/rss/ # 博客专栏列表页配置 index_topic: base_dir: topic # 只影响自动生成的页面路径 menu_id: post # 未在 front-matter 中指定 menu_id 时，layout 为 topic 的页面默认使用这里配置的 menu_id # 文档列表页配置 index_wiki: base_dir: wiki # 只影响自动生成的页面路径 menu_id: wiki # 未在 front-matter 中指定 menu_id 时，layout 为 wiki 的页面默认使用这里配置的 menu_id leftbar: ghissues, related, recent # for wiki rightbar: timeline nav_tabs: # more: https://github.com/xaoxuu 内容类页面是指具体到文章页面，文档页面和专栏文章等的具体配置 blog/_config.stellar.yml# 站点主结构树site_tree: # -- 内容类页面 -- # # 博客文章内页配置 post: menu_id: post # 未在 front-matter 中指定 menu_id 时，layout 为 post 的页面默认使用这里配置的 menu_id leftbar: related, ghrepo, ghissues, recent # for pages using layout:post rightbar: ghrepo, toc # 博客专栏文章内页配置 topic: menu_id: post # 文档内页配置 wiki: menu_id: wiki # 未在 front-matter 中指定 menu_id 时，layout 为 wiki 的页面默认使用这里配置的 menu_id leftbar: tree, ghissues, related, recent # for wiki rightbar: ghrepo, toc # 作者信息配置 author: base_dir: author # 只影响自动生成的页面路径 menu_id: post leftbar: recent, timeline rightbar: timeline # 错误页配置 error_page: menu_id: post 404: /404.html leftbar: recent, timeline rightbar: timeline # 其它自定义页面配置 layout: page page: leftbar: recent rightbar: timeline, toc 灵活用法继承（覆盖）组件适合有多个相似组件的情况，例如有多个时间线组件，显示规则相同，仅 api 地址不同： blog/source/_data/widgets.ymlmy_timeline_lite: layout: timeline title: 近期动态 user: xaoxuu hide: title,footer api: 在不同的页面设置不同的 api 地址： blog/source/_posts/xxx.md---title: 某一篇文章leftbar: - welcome # 只写一个字符串代表引用对应的通用组件 - override: my_timeline_lite api: https://xxx--- 匿名组件：仅在使用时创建适合仅在一个页面或项目中才需要用到的组件，例如在某个页面的侧边栏放一个公告： blog/source/_posts/xxx.md---title: 某一篇文章leftbar: - welcome # 只写一个字符串代表引用对应的通用组件 - layout: markdown title: 重要通知 [NOTE.2022-09] content: | 请不要原封不动的把本站内容复制到贵站中使用，这样一方面不尊重原作者，另一方面也会因为存在大量重复内容影响贵站收录甚至降权。 从2022年9月起本站已不再开源，已经持有源码副本或`fork`的朋友请及时删除以防止被他人恶意搬运的情况继续发生。 [ 了解详情](https://github.com/xaoxuu/xaoxuu.github.io#readme) src: # 可以设置外部 md 文件链接--- 又或者在项目的配置文件中创建专属于这个项目的组件： blog/_data/projects.ymlStellar: name: Stellar title: Stellar - 每个人的独立博客 subtitle: 每个人的独立博客 | Designed by xaoxuu leftbar: - layout: timeline title: 最近更新 api: https://api.github.xaox.cc/repos/xaoxuu/hexo-theme-stellar/releases?per_page=1 hide: footer ..."},{"title":"如何使用文档系统","path":"/wiki/stellar/wiki-settings/index.html","content":"Stellar 独创了其它 Hexo 主题所没有的 Wiki 文档系统，可以自动找到一个项目的所有文档分页，生成一个目录树，还可以手动指定顺序、标题、分组，而非依赖文件路径、文件名来排序和显示。 基本流程1/3 创建项目描述文件在 blog/source/_data/ 文件夹中创建一个 wiki 文件夹，在其中放入各个项目的文档。以 Stellar 项目为例，文件名就是项目的 id：blog/source/_data/wiki/hexo-stellar.ymlname: Stellartitle: Stellar - 每个人的独立博客subtitle: 每个人的独立博客 | Designed by xaoxuutags: 博客主题icon: https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/wiki/stellar/icon.svgcover: https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/wiki/stellar/icon.svgdescription: Stellar 是一个内置文档系统的简约商务风 Hexo 主题，支持丰富的标签和动态数据组件。repo: xaoxuu/hexo-theme-stellarsearch: filter: /wiki/stellar/ placeholder: 在 Stellar 中搜索...leftbar: - tree - timeline_stellar_releases - relatedcomment_title: 评论区仅供交流，有问题请提 [issue](https://github.com/xaoxuu/hexo-theme-stellar/issues) 反馈。comments: service: giscus giscus: data-repo: xaoxuu/hexo-theme-stellar data-mapping: number data-term: 226base_dir: /wiki/stellar/tree: 快速开始: - index - examples - releases 基本使用: - theme-settings - pages - sidebar - tag-plugins - tag-plugins/express - tag-plugins/data - tag-plugins/container - comments 文档系统: - wiki-settings 进阶玩法: - widgets - advanced-settings - notes 技术支持: - articles - todo - contributors2/3 设置布局模板和项目名称在此文档项目的 md 文件的 front-matter 部分指定所属的项目 id （即上一步创建的文件名 id.yml）blog/source/wiki/stellar/index.md---wiki: hexo-stellar # 这是项目id，对应 /data/wiki/hexo-stellar.ymltitle: 这是分页标题---3/3 将此项目「上架」在 blog/source/_data/ 文件夹中创建一个 wiki.yml 文件，在其中写入需要显示的项目 id：blog/source/_data/wiki.yml- hexo-stellar- 其它项目这样在项目列表（wiki）页面就可以看到刚刚创建的项目了。 项目分页索引指定项目所在文件夹和目录树： blog/source/_data/wiki/hexo-stellar.ymlbase_dir: /wiki/stellar/tree: 快速开始: - index # 会被关联到 /wiki/stellar/index.md - examples # 会被关联到 /wiki/stellar/examples.md - releases 基本使用: - theme-settings - pages - sidebar - tag-plugins - tag-plugins/express - tag-plugins/data - tag-plugins/container - comments 文档系统: - wiki-settings 进阶玩法: - widgets - advanced-settings - notes 技术支持: - articles - todo - contributors 如果目录树不需要分组，可以这样写： blog/source/_data/wiki/hexo-stellar.ymlbase_dir: /wiki/stellar/tree: - index # 会被关联到 /wiki/stellar/index.md - examples # 会被关联到 /wiki/stellar/examples.md - ... 是否显示封面项目可以显示一个全屏封面，封面占据一个屏幕的高度，会居中依次显示项目的 logo、标题、描述。开启项目封面方法如下： blog/source/_data/wiki/hexo-stellar.ymlcover: https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/wiki/stellar/icon.svgcoverpage: true # 默认是 true 如果 logo 中已经包含了项目标题，可以这样设置不显示项目标题： blog/source/_data/wiki/hexo-stellar.ymlcoverpage: [logo, description] 项目文档标签如果您有很多项目，有些项目是有相关性的，可以相同的 tags 值： blog/source/_data/wiki/hexo-stellar.ymltags: 博客主题 也可以设置多个 tags 值： blog/source/_data/wiki/hexo-stellar.ymltags: [博客主题, 开源项目] 项目的 GitHub 仓库信息设置了 repo 值就会在右上角显示项目仓库的相关链接： blog/source/_data/wiki/hexo-stellar.ymlrepo: xaoxuu/hexo-theme-stellar 项目评论设置如果希望项目的所有分页使用相同的评论数据，可以在这里覆盖评论配置： blog/source/_data/wiki/hexo-stellar.ymlcomment_title: 评论区仅供交流，有问题请提 [issue](https://github.com/xaoxuu/hexo-theme-stellar/issues) 反馈。comments: giscus: data-repo: xaoxuu/hexo-theme-stellar data-mapping: number data-term: 226 侧边栏组件如果您希望自定义某个项目的侧边栏组件，可以设置 sidebar 值： 可以覆盖组件： blog/source/_data/wiki/hexo-stellar.ymlleftbar: - tree - timeline_stellar_releases - related todo 在目录树中隐藏某篇文章可以在 front-matter 中不设置 title 标题，或者将 title 改为 seo_title： blog/source/xxx/xxx.mdtitle: 原本的标题 todo 显示许可协议沿用主题配置文件中设置的： blog/source/_data/wiki/hexo-stellar.ymllicense: true 也可以指定协议内容： blog/source/_data/wiki/hexo-stellar.ymllicense: 本文采用 [署名-非商业性使用-相同方式共享 4.0 国际](https://creativecommons.org/licenses/by-nc-sa/4.0/) 许可协议，转载请注明出处。 显示分享blog/source/_data/wiki/hexo-stellar.ymlshare: true 修改 wiki 路径修改如下配置： blog/_config.stellar.ymlsite_tree: wiki: base_dir: wiki # books / products ..."},{"title":"用文档系统制作一本简易笔记","path":"/wiki/stellar/wiki-settings/notes.html","content":"创建描述文件blog/source/_data/wiki/notes.ymlname: 备忘录title: 备忘录icon: # 列表页图标cover: # 封面页大图coverpage: [cover, title, description] # 封面页显示的内容comments: service: giscus # 若你不适用默认的评论方式，需要添加此项 giscus: # 需要你在主题配置文件_config.stellar.yml中设置好giscus的其他参数，其他评论方式同理 data-term: 23 data-mapping: numberbase_dir: /notes/tree: 日常问题解决方案: - mac 移动端开发笔记: - ios - flutter 前端学习笔记: - nodejs - server 在线工具: - json 设置 menu_id然后笔记页面的 front-matter 中指定要高亮的 menu_id： blog/source/notes/index.md---wiki: notes # 这个跟上面的 /wiki/notes.yml 关联起来menu_id: notes # 这个跟配置文件中的 `menubar.items.notes` 关联起来，这很重要，如果没有这个，就像普通的wiki项目一样了--- 这样就可以啦～"},{"title":"表达类标签组件（31+个）","path":"/wiki/stellar/tag-plugins/express/index.html","content":"emoji 表情包效果演示语法格式引入表情包内置了可配置的表情标签 使用方法如下： % emoji 爱你 %% emoji blobcat ablobcatattentionreverse %% emoji tieba 滑稽 % 如果对高度有特别要求，可以指定高度，例如： center% emoji blobcat ablobcatrainbow height:1em %% emoji blobcat ablobcatrainbow height:2em %% emoji blobcat ablobcatrainbow height:3em %% emoji blobcat ablobcatrainbow height:2em %% emoji blobcat ablobcatrainbow height:1em %/center% emoji [source] name [height:1.75em] % 其中 source 可省略，默认为配置中的第一个 source（详见「引入表情包」部分） 表情速查表：Stellar内嵌blobcat小表情 blog/_config.stellar.ymltag_plugins: ... emoji: default: https://gcore.jsdelivr.net/gh/cdn-x/emoji/qq/name.gif twemoji: https://gcore.jsdelivr.net/gh/twitter/twemoji/assets/svg/name.svg qq: https://gcore.jsdelivr.net/gh/cdn-x/emoji/qq/name.gif aru: https://gcore.jsdelivr.net/gh/cdn-x/emoji/aru-l/name.gif tieba: https://gcore.jsdelivr.net/gh/cdn-x/emoji/tieba/name.png 在配置文件中，文件名用 {name} 代替。 icon 图标标签支持在任意位置插入图标，支持外链图标，也可以在 icons.yml 中提前配置好。 可以指定图标的颜色吗？ 当然可以，还可以在主题配置中设置默认颜色： 写法如下icons.yml 中的图标：% icon solar:planet-bold-duotone %外链图标：% icon https://api.iconify.design/solar:link-circle-bold.svg %指定颜色：% icon ph:seal-question-fill color:red % 配置默认颜色tag_plugins: icon: # 留空时，图标和文字颜色相同 default_color: accent # theme, accent, red, orange, yellow, green, cyan, blue, purple 还支持 style 参数，可以直接对样式进行修改，仅支持外链图标，style 参数中间不能有空格。 mark 标记标签支持多彩标记，包括：默认 红 橙 黄 绿 青 蓝 紫 亮 暗 警告 错误 一共 12 种颜色。 支持多彩标记，包括：% mark 默认 % % mark 红 color:red % % mark 橙 color:orange % % mark 黄 color:yellow % % mark 绿 color:green % % mark 青 color:cyan % % mark 蓝 color:blue % % mark 紫 color:purple % % mark 亮 color:light % % mark 暗 color:dark % % mark 警告 color:warning % % mark 错误 color:error % 一共 12 种颜色。 hashtag 标签Stellar Hexo GitHub Gitea 如果没有指定颜色，且没有设置默认颜色，则随机取一个颜色，快来试试吧～ % hashtag Stellar https://xaoxuu.com/wiki/stellar/ %% hashtag Hexo https://hexo.io/ %% hashtag GitHub https://github.com/xaoxuu/ %% hashtag Gitea https://git.xaox.cc/ color:green % image 图片标签图片标签是一个精心设计的应对各种尺寸插图的标签，对于大图，可以放置一个「下载」按钮，语法格式如下： % image src [description] [download:bool/string] [width:px] [padding:px] [bg:hex] [fancybox:bool/string] % 参数说明src: 图片地址description: 图片描述download: href # 下载地址，设置此值后鼠标放在图片上会显示下载地址，如果下载地址为图片地址，可以设置为 truewidth: 200px # 图片宽度padding: 16px # 图片四周填充宽度bg: #ffffff # 图片区域背景颜色，16进制fancybox: href # fancybox 放大地址，设置此值后会调用该链接放大，如果放大地址为图片地址，可以设置为 true 横向铺满的图片无论在什么宽度的设备上都希望横向铺满的图片，一般不需要额外操作。可以在链接后面写上图片描述，如有必要，可以通过设置 download:true 使其显示一个「下载」按钮链接指向图片地址，如果下载链接与显示的图片地址不同，可以 download:下载链接 来使其能够下载原图。 图片由 xaoxuu 拍摄于一个普通的阳光明媚的下午 写法如下% image https://res.xaox.cc/xaoxuu/posts/202401131914137.jpg-hd 图片由 xaoxuu 拍摄于一个普通的阳光明媚的下午 download:https://res.xaox.cc/xaoxuu/posts/202401131914137.jpg-hd ratio:1280/960 % 竖图（小图）优化宽度较小而高度较大的图片，可以设置宽、高、填充间距、背景色等对其布局进行优化，使得它在不同宽度的屏幕下都能获得不错的视觉体验： 限制宽度设置填充区域图片由 xaoxuu 拍摄于 Dattle 幼年时期 % image https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/xaoxuu/mirror/apple/documentation/watchkit/06d45110-1dd7-49a4-a413-9f5159ecdd0e.png width:200px padding:16px bg:white ratio:526/902 % 如果不进行约束，在宽屏设备上会占用很大篇幅 可以设置填充宽度和颜色，支持 bg:var(--card) 动态颜色，能够适配暗黑模式： % image https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/wiki/stellar/icon.svg bg:var(--card) padding:16px ratio:512/512 % 支持 Fancybox 插件点击放大由于 Stellar 主题的插件具有按需加载的特性，所以 Fancybox 插件默认也是已经配置好了的，在任意 image 标签中增加 fancybox:true 参数即可为特定图片开启缩放功能。如果一个页面没有任何地方使用，则不会加载 Fancybox 插件。 图片来自 Apple 官网 如果您希望全站所有的 image 标签都开启此功能，可在主题配置文件中修改以下参数： blog/_config.stellar.yml######## Tag Plugins ########tag_plugins: # % image % image: fancybox: false 从 1.28.1 版本开始，如果想在页面中展示较小的图片，但在 fancybox 中展示较大的高清的图片，可以用 fancybox:大图链接 参数。 blockquote 段落引用这个是标准写法 引用内容 的增强版本，适合不太强调的、大段落的引用。 效果对比写法 这是使用 “ 引用” 写法的例子 这是使用 blockquote 标签的例子 这是使用 引用 写法的例子% blockquote %这是使用 blockquote 标签的例子% endblockquote % 两者的区别在于： 引用 写法在技术文章和非技术文章的样式不同，适配各自的风格 blockquote 标签写法则始终表现为非技术文章的样式 因为本文是技术文章，所以你能看出两者样式的明显区别，而在非技术文章中，两者写法的样式是一样的。 题外话本来这个叫 quote，但是发现文章显示不全，和 box 标签以前命名为 noteblock 时的表现一样，可能又命中了 hexo 某些隐藏彩蛋。 quot 强调引用适合居中且醒目的引用：Stellar 是迄今为止最好用的主题 支持自定义引号：热门话题 其中自定义引号素材在主题配置文件的 tag_plugins.quot 中配置： tag_plugins: ... # % quot % quot: default: # 可以自行配置多种图标方案，支持icons.yml中配置的图片key，也支持直接设置svg/png等文件链接 prefix: bxs:quote-left suffix: bxs:quote-right hashtag: prefix: solar:hashtag-square-bold 写法如下 适合居中且醒目的引用：% quot Stellar 是迄今为止最好用的主题 %支持自定义引号：% quot 热门话题 icon:hashtag %、% quot 特别引用 icon:default % 特别引用 此外，加上 el:h2/h3/h4/h5/h6 可以作为标题使用 使用任意图标从 1.26.5 版本开始，您可以通过 prefix 或 suffix 参数设置任意图标或图片，支持 URL 或 icons.yml 文件中配置，例如： 这是一个 icons.yml 配置的示例 这是一个 url 的示例 写法如下 % quot prefix:solar:planet-bold-duotone 这是一个 icons.yml 配置的示例 %% quot prefix:https://api.iconify.design/line-md:moon-alt-to-sunny-outline-loop-transition.svg 这是一个 url 的示例 suffix:https://api.iconify.design/solar:list-heart-minimalistic-line-duotone.svg % 虽然丰富多彩的图标可以使其变得更醒目，但是滥用就会导致文章显得杂乱无章。 poetry 诗词示例写法游山西村陆游莫笑农家腊酒浑，丰年留客足鸡豚。山重水复疑无路，柳暗花明又一村。箫鼓追随春社近，衣冠简朴古风存。从今若许闲乘月，拄杖无时夜叩门。诗词节选% poetry 游山西村 author:陆游 footer:诗词节选 %莫笑农家腊酒浑，丰年留客足鸡豚。**山重水复疑无路，柳暗花明又一村。**箫鼓追随春社近，衣冠简朴古风存。从今若许闲乘月，拄杖无时夜叩门。% endpoetry % paper 纸张标签示例写法文言文出师表先帝创业未半而中道崩殂，今天下三分，益州疲弊，此诚危急存亡之秋也。然侍卫之臣不懈于内，忠志之士忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气，不宜妄自菲薄，引喻失义，以塞忠谏之路也。后出师表先帝深虑汉、贼不两立，王业不偏安，故托臣以讨贼也。以先帝之明，量臣之才，固知臣伐贼，才弱敌强也。然不伐贼，王业亦亡。惟坐而待亡，孰与伐之？是故托臣而弗疑也。诸葛亮三国节选% paper style:underline title:文言文 author:诸葛亮 date:三国 footer:节选 %!-- line left --出师表!-- paragraph --先帝创业未半而中道崩殂，今天下三分，益州疲弊，此诚危急存亡之秋也。然侍卫之臣不懈于内，忠志之士忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气，不宜妄自菲薄，引喻失义，以塞忠谏之路也。!-- line right --后出师表!-- paragraph --先帝深虑汉、贼不两立，王业不偏安，故托臣以讨贼也。以先帝之明，量臣之才，固知臣伐贼，才弱敌强也。然不伐贼，王业亦亡。惟坐而待亡，孰与伐之？是故托臣而弗疑也。% endpaper % 可选参数style: underline/无 # 是否带下划线title: # 标题author: # 作者date: # 日期footer: # 页脚信息 正文中可以设置行段落格式以显示不同的效果 !-- section 小节标题 --小节标题，居中显示!-- paragraph --段落，首行缩进两个字符!-- line left --段落左对齐!-- line right --段落右对齐 reel 卷轴标签示例写法滕王阁序王勃时维九月，序属三秋。潦水尽而寒潭清，烟光凝而暮山紫。俨骖騑于上路，访风景于崇阿。临帝子之长洲，得天人之旧馆。层峦耸翠，上出重霄；飞阁流丹，下临无地。鹤汀凫渚，穷岛屿之萦回；桂殿兰宫，即冈峦之体势。重九日节选% reel 滕王阁序 author:王勃 date:重九日 footer:节选 %时维九月，序属三秋。潦水尽而寒潭清，烟光凝而暮山紫。俨骖騑于上路，访风景于崇阿。临帝子之长洲，得天人之旧馆。层峦耸翠，上出重霄；飞阁流丹，下临无地。鹤汀凫渚，穷岛屿之萦回；桂殿兰宫，即冈峦之体势。% endreel % 可选参数title: # 标题author: # 作者date: # 日期footer: # 页脚信息 note 备注块示例写法% note [title] content [color:color] %title: 标题（可选）content: 内容color: red/orange/yellow/green/cyan/blue/purple/light/dark/warning/error 具有标题的备注块直接写备注内容，默认是和代码块一样的样式，第一个空格前面的是标题，后面的是正文，如果标题中需要显示空格，请使用 nbsp; 代替。 示例写法这是标题这是正文 哈哈。% note 这nbsp;是标题 这是正文 哈哈。 % 彩色备注块一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 link 示例写法一共支持12种颜色，可以满足几乎所有的需求了 一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 link 一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 link 一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 link 一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 link 一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 link 一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 link 一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 link 一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 link 一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 link 一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 link 一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 link 一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 link 一共支持12种颜色，可以满足几乎所有的需求了。color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 link% note 一共支持12种颜色，可以满足几乎所有的需求了。 color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 [link](/) %% note color:cyan 一共支持12种颜色，可以满足几乎所有的需求了。 color 可设置 red、orange、amber、yellow、green、cyan、blue、purple、light、dark、warning、error 几种取值。 [link](/) % link 链接卡片效果演示语法格式写法示例https://xaoxuu.com/blog/20221029/https://xaoxuu.com/blog/20221029/ https://xaoxuu.com/blog/20221029/https://xaoxuu.com/blog/20221029/外链卡片标签的语法格式为： % link href [title] [icon:src] [desc:true/false] % 参数含义： href: 链接title: 可选，手动设置标题（为空时会自动抓取页面标题）icon: 可选，手动设置图标（为空时会自动抓取页面图标）desc: 可选，是否显示摘要描述，为true时将会显示页面描述不带摘要的样式：% link https://xaoxuu.com/blog/20221029/ %带摘要的样式：% link https://xaoxuu.com/blog/20221029/ desc:true % 随着网站流量的增加，使用主题默认的 api 很可能会导致流量超限，推荐使用自部署的 api 抓取网站信息。参考下方仓库的 README 。 https://github.com/xaoxuu/site-info-apihttps://github.com/xaoxuu/site-info-api 并在主题配置中填入你的 api blog/_config.stellar.ymldata_services: # % link % siteinfo: # 设置 api 可以自动提取网页标题、图标，服务部署方法：https://github.com/xaoxuu/site-info-api/ # 接口测试通过后，把按钮的 href 部分替换成 href 之后填写到下方，例如：https://api.xaox.cc/site_info/v1?url=href api: button 按钮这个功能在 1.26.6 版本后开始支持。 文档 源码 示例 写法如下% button 探索 https://github.com/xaoxuu/hexo-theme-stellar/ icon:solar:planet-bold-duotone % 语法格式% button text url [icon:key/src] [color:color] [size:xs] % 参数含义# 必填text: 探索 # 显示文字url: # 跳转链接# 可选参数color: orange # theme, accent, red, orange, yellow, green, cyan, blue, purpleicon: solar:planet-bold-duotone # 显示图标，支持 icon.yml 中的文件名和外链图标size: xs # 按钮尺寸，目前只有两种尺寸：默认是普通大小， xs 是最小号 okr 目标管理这个功能在 1.20.0 版本后开始支持，这是一个 OKR（Objectives and Key Results）示例： O1 2077年的小目标：完成 Volantis 6.0 并发布上线 来自2077年末的复盘：已《基本》实现目标 正常 44% KR1 重构 tag-plugins 和 wiki 系统 当 KR 进度为 100% 时，标签默认显示为 已完成当 KR 未设置进度时，默认为 0%当 O 未设置进度时，则显示所有 KR 进度平均值 已完成 100% KR2 完成主要页面设计稿 小提示1小提示2您可以在 _config.yml 文件中修改标签的颜色和文案您可以在 _config.yml 文件中增加任意的标签配置 延期 90% KR3 完成前置准备工作（如果你知道答案，请在留言区帮帮我！🥹） 在咸水和海滩之间找一亩地求出圆周率后15位找出宇宙的终极逻辑去地狱里走两步 未完成 -12% KR-4 开发、测试和发布 支持嵌套插入图片等其它简单组件 风险 0% 写法如下： % okr o1 %2077年的小目标：完成 Volantis 6.0 并发布上线来自2077年末的复盘：已《基本》实现目标 % emoji tieba 滑稽 %!-- okr kr1 percent:100 --重构 tag-plugins 和 wiki 系统- 当 % mark KR % 进度为 100% 时，标签默认显示为 % mark color:green 已完成 %- 当 % mark KR % 未设置进度时，默认为 % mark 0% %- 当 % mark O % 未设置进度时，则显示所有 % mark KR % 进度平均值!-- okr kr2 percent:90 status:off_track --完成主要页面设计稿% tabs align:left %!-- tab 小提示1 --您可以在 _config.yml 文件中修改标签的颜色和文案!-- tab 小提示2 --您可以在 _config.yml 文件中增加任意的标签配置% endtabs %!-- okr kr3 percent:-12 status:unfinished --完成前置准备工作（如果你知道答案，请在留言区帮帮我！🥹）% checkbox 在咸水和海滩之间找一亩地 %% checkbox 求出圆周率后15位 %% checkbox 找出宇宙的终极逻辑 %% checkbox 去地狱里走两步 %!-- okr kr-4 status:at_risk --开发、测试和发布% image https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/wiki/stellar/icon.svg height:64px 支持嵌套插入图片等其它简单组件 ratio:512/512 %% endokr % copy 复制行示例写法对于单行内容，可以使用 copy 标签来实现复制功能： $ 您可以设置 git:https 或者 git:ssh 或者 git:gh 来快速放置一个 git 仓库链接： HTTPS% copy curl -s https://sh.xaox.cc/install | sh %% copy curl -s https://sh.xaox.cc/install | sh prefix:$ %% copy git:https xaoxuu.com/hexo-theme-stellar %% copy git:ssh xaoxuu.com/hexo-theme-stellar %% copy git:gh xaoxuu.com/hexo-theme-stellar % radio 单选示例写法没有勾选的单选框 已勾选的单选框% radio 没有勾选的单选框 %% radio checked:true 已勾选的单选框 % 支持的参数checked: true/falsecolor: red/orange/yellow/green/cyan/blue/purple checkbox 复选示例写法普通的没有勾选的复选框 普通的已勾选的复选框 显示为加号的绿色的已勾选的复选框 显示为减号的黄色的已勾选的复选框 显示为乘号的红色的已勾选的复选框% checkbox 普通的没有勾选的复选框 %% checkbox checked:true 普通的已勾选的复选框 %% checkbox symbol:plus color:green checked:true 显示为加号的绿色的已勾选的复选框 %% checkbox symbol:minus color:yellow checked:true 显示为减号的黄色的已勾选的复选框 %% checkbox symbol:times color:red checked:true 显示为乘号的红色的已勾选的复选框 % 支持的参数checked: true/falsecolor: red/orange/yellow/green/cyan/blue/purplesymbol: plus/minus/times audio 音频标签支持音乐外链以及网易云音乐，网易云支持设置 type 以及 autoplay 参数。 Your browser does not support the audio tag. 写法如下% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %% audio netease:1856385686 %% audio type:2 netease:1856385686 autoplay:0 % 支持的参数type: 2/0 # 歌曲/歌单 # 不设置默认为2歌曲模式netease: xxx # 歌曲/歌单 id ，具体 id 在网易云网页版的网址链接中寻找 autoplay: 1/0 # 自动播放/手动播放 # 不设置默认0手动播放 video 视频标签支持 bilibili, youtube 和视频外链，可设置最大宽度， bili, yt 均可设置宽度和自动播放 Your browser does not support the video tag. Your browser does not support the video tag. 写法如下% video bilibili:BV1GP4y1d729 %% video bilibili:BV1GP4y1d729 width:100% autoplay:0 %% video youtube:LB8KwiiUGy0 %% video youtube:LB8KwiiUGy0 width:100% autoplay:0 %% grid c:2 %!-- cell --% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %!-- cell --% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov width:100% %% endgrid % 支持的参数width: 500px # 须带单位 80% 20em 100mm...autoplay: 1/0 # 自动播放/手动播放 # 不设置默认为0手动播放 目前 bilibili 的 iframe 标签不能放进 grid 容器里，原因未知。 chat 聊天标签非常感谢 @且听风吟 为 Stellar 开发了精美的聊天风格标签，并提供了详细的使用文档。内置qq和微信风格，可配单聊、群聊、user、设备等，支持文本、icon、图片、语音、视频、文件和链接。user可在chat_users.yaml中统一设置，也可在具体使用时单独设置。 示例：https://stellar.listentothewind.cn 文档：https://github.com/xaoxuu/hexo-theme-stellar/pull/560 navbar 导航栏文章内也可以插入一个导航栏： % navbar active:/wiki/ [文章](/) [项目](/wiki/) [留言](#comments) [GitHub](https://github.com/xaoxuu/) % active 传入要高亮的那个按钮的 url 文章项目留言GitHub frame 设备框架示例写法% frame iphone11 img:https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/wiki/prohud/toast/demo-loading.png video:https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/wiki/prohud/toast/demo-loading.mp4 focus:top % 文本修饰标签集 这是 高斯模糊 标签 这是 密码 标签 这是 下划线 标签 这是 着重号 标签 这是 波浪线 标签 这是 删除线 标签 这是 上角标 标签 这是 下角标 标签 这是 键盘样式 标签，试一试：⌘ + D 写法如下- 这是 % blur 高斯模糊 % 标签- 这是 % psw 密码 % 标签- 这是 % u 下划线 % 标签- 这是 % emp 着重号 % 标签- 这是 % wavy 波浪线 % 标签- 这是 % del 删除线 % 标签- 这是 % sup 上角标 color:red % 标签- 这是 % sub 下角标 % 标签- 这是 % kbd 键盘样式 % 标签，试一试：% kbd ⌘ % + % kbd D %"},{"title":"数据类标签组件（6个）","path":"/wiki/stellar/tag-plugins/data/index.html","content":"timeline 时间线支持静态和动态时间线数据源： 静态数据 github issues 支持多种筛选参数，详见 API github releases 支持多种筛选参数，详见 API gitea issues 支持多种筛选参数，详见 API gitea releases 支持多种筛选参数，详见 API memos … 常见的使用场景请看这篇文章： https://xaoxuu.com/blog/20221029/https://xaoxuu.com/blog/20221029/ 静态时间线静态数据是写死在 md 源文件中的，在 deploy 时就已经确定了。 2021 年 2 月 16 日主要部分功能已经开发的差不多了。2021 年 2 月 11 日今天除夕，也是生日，一个人在外地过年+过生日，熬夜开发新主题，尽量在假期结束前放出公测版。 写法如下% timeline %!-- node 2021 年 2 月 16 日 --主要部分功能已经开发的差不多了。% image https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/wiki/stellar/photos/hello@1x.png width:300px ratio:1179/390 %!-- node 2021 年 2 月 11 日 --今天除夕，也是生日，一个人在外地过年+过生日，熬夜开发新主题，尽量在假期结束前放出公测版。% endtimeline % 动态时间线动态说说微博动态动态数据是从 GitHub Issues 中拉取的，使用方法为： 建一个仓库 创建一个 issue 并添加一个 label 进行测试 写 timeline 标签时加上 api:https://api.github.com/repos/your-name/your-repo/issues 例如： _posts/xxx.md% timeline api:https://api.github.com/repos/xaoxuu/blog-timeline/issues?direction=ascper_page=3 %% endtimeline % 效果如下： fork shaoyaoqianWeiboSpider 的爬虫，修改自己的仓库名 修改 .github/workflows/main.yml 中的微博ID为你想爬取的ID，修改完后每天会自动爬取你的微博，存储为 json 文件，输出文件在 output 分支 _posts/xxx.md% timeline limit:20 type:weibo api:你的json文件地址 %% endtimeline % 静态 + 动态用法同静态和动态单独使用时一样，例如： % timeline reversed:true api:https://raw.github.xaox.cc/xaoxuu/ghapi-json-generator/refs/heads/output/v2/repos/xaoxuu/blog-timeline/issues%3Fper_page%3D5/data.json %!-- node 这条内容为静态数据 --这条内容为静态数据，静态数据在 `deploy` 时就已经确定了。% endtimeline % 数据筛选只显示某个人的数据 筛选最近3条todo 筛选评论最多的3条建议 上述示例代码如下： % folders %!-- 只显示某个人的数据 --% timeline user:xaoxuu api:https://api.github.xaox.cc/repos/volantis-x/hexo-theme-volantis/issues %% endtimeline %!-- 筛选最近3条todo --% timeline api:https://api.github.xaox.cc/repos/xaoxuu/hexo-theme-stellar/issues?labels=todoper_page=3 %% endtimeline %!-- 筛选评论最多的3条建议 --% timeline api:https://api.github.xaox.cc/repos/volantis-x/hexo-theme-volantis/issues?labels=feature-requestper_page=3sort=comments %% endtimeline %% endfolders % 更多用法详见： GitHubRESTAPIhttps://docs.github.com/en/rest/issues/issues#list-issues-assigned-to-the-authenticated-user friends 友链 您可以在任何位置插入友链组，支持静态数据和动态数据，静态数据需要写在数据文件中： blog/source/_data/links/ios_developer.yml- title: 某某某 url: https:// cover: icon: description: 在需要的位置这样写： % friends ios_developer % 实现动态友链从 xaoxuufriends 作为模板克隆或者 fork 仓库，记得打开 github action 的运行权限就可以啦。 不出意外的话，仓库中已经配置好了 issue 模板，只需要在模板中指定的位置填写信息就可以了。然后在自己的仓库里提交一个 issue 进行测试。提交完 issue 前往 Action 页面查看执行情况，如果执行成功，仓库中出现了 output 分支提交，可以点击查看一下文件内容是否已经包含了刚刚提交的 issue 中的数据，如果包含，那么前端页面就可以使用友链数据了： % friends api:https://raw.github.com/xaoxuu/friends/output/v2/data.json % 这个仓库用到了3个工作流，分别是： issues2json：自动获取issue中第一段json保存为文件，支持多种排序和过滤 links-checker：自动检查issue中填写的链接是否有效，可用于动态友链、示例博客 feed-posts-parser：友链文章订阅 如果想修改规则，可以看看这3个工作流项目的 README 文档。 旧的友链仓库怎么升级？详见这篇文章：《感谢 AI，动态友链获重磅升级！》 数据托管与加速特别感谢 特别感谢小冰博客的加速访问方案，解决了直接请求 GitHub API 速度过慢的问题，详见 小冰博客 的教程。 支持把数据托管到任何其他地方来使用，例如： % friends api:https://raw.github.xaox.cc/xaoxuu/friends/output/v2/data.json % Stellar 1.13.0 动态数据 API 升级至 v2 版本，原使用 issue-api 仓库的需要将友链仓库同步更新。v1 版本已经停止维护。 你可以有 N 种办法加速访问 GitHub 仓库里的文件。 sites 网站卡片 您可以在任何位置插入网站卡片组，支持静态数据和动态数据，静态数据需要写在数据文件中： blog/source/_data/links/sites_design.yml- title: 标题 url: https:// cover: icon: description: 在需要的位置这样写： % sites 分组名 % Stellar v1.13.0 原 friends 和 sites 标签数据合并至 links/xxx.yml 文件，动态数据使用方法同友链，数据源格式相同，与友链共享数据，仅样式不同，也可以用 sites 标签做友链。 md 渲染外部 markdown 文件% folding %% md https://gcore.jsdelivr.net/gh/xaoxuu/hexo-theme-stellar/README.md %% endfolding % 效果如下 ghcard 卡片 写法如下% ghcard xaoxuu %% ghcard xaoxuu/hexo-theme-stellar theme:dark % GitHubCardAPIhttps://github.com/anuraghazra/github-readme-stats toc 文档目录树% toc wiki:xxx [open:true] [display:mobile] title %"},{"title":"容器类标签组件（10个）","path":"/wiki/stellar/tag-plugins/container/index.html","content":"box 盒子容器note 标签就是使用 box 容器实现的，它们样式是相同的： 语法格式% box [title] [color:color] [child:codeblock/tabs] %...% endbox % 彩色代码块设置 child:codeblock 并设置 color:颜色枚举 可以实现 10 种不同颜色的代码块，彩色代码块一般可以用在代码正确与错误的示范对比场景。 示例写法 推荐的写法func test() // ... 不推荐的写法func test() - () // ... 嵌套多段代码块同一个 box 标签里面直接放多个代码块就可以啦： 示例写法发送端+ (void)test [NSNotificationCenter.defaultCenter postNotificationName:@test object:nil];订阅端func setup() list.add(title: test) section in section.add(title: 设置 Observer) NotificationCenter.default.addObserver(self, selector: #selector(self.onReceive), name: .init(test), object: nil) section.add(title: 发通知) OC.test() @objc func onReceive(other: (() - Void)? = nil) Capsule(收到通知) 嵌套其它标签例如嵌套一个 tabs 标签： 图文混排示例代码个人电脑作为办公设备时，我们该如何保护隐私？公司一般都会强制安装安防软件，这些软件要求开机自启动，要求有屏幕录制权限、完全的磁盘访问权限包括相册图库。因此如果使用自己的 MacBook 作为办公设备，必须要把生活区和工作区完全独立开，安装在两个磁盘分区，并且对磁盘分区进行加密。 folding 折叠容器折叠块标签的语法格式为： % folding title [codeblock:bool] [open:bool] [color:color] %content% endfolding % 参数说明codeblock: true/falseopen: true/falsecolor: red/orange/yellow/green/cyan/blue/purple/light/dark 彩色可折叠代码块备注标签相较于旧版进行了增强，可以实现更多种颜色，还可以通过设置 child:codeblock 来实现可折叠的代码块。以下是一个默认打开的代码折叠框： 默认打开的代码折叠框 func test() print(hello world) 代码如下： % folding child:codeblock open:true color:yellow 默认打开的代码折叠框 %代码块% endfolding % 危险，请不要打开这个 通过设置颜色，以实现更醒目的作用，但不要滥用色彩哦～ 警告，真的很危险 通过设置颜色，以实现更醒目的作用，但不要滥用色彩哦～ 最后一次警告，千万不要打开这个 不要说我们没有警告过你，Windows 10 不是為所有人設計，而是為每個人設計。 folders 多个折叠容器聚合样式相比 folding 简单一些，适用于多个折叠标签平铺显示的场景，例如题目列表： 题目1 这是答案1题目2 这是答案2题目3 这是答案3 代码如下： % folders %!-- folder 题目1 --这是答案1!-- folder 题目2 --这是答案2!-- folder 题目3 --这是答案3% endfolders % tabs 分栏容器这个标签移植自 NexT 主题，但做了以下修改： 支持设置 align:center 来使内容居中 设置默认激活的标签方式为 active:1 而非 , 1（使用默认格式降低学习成本，且显式声明可读性更强） 不需要 !-- endtab -- 来作为结束标识（因为 Stellar 会自动判断） 不需要 tabs id 来保证唯一性（因为 Stellar 会设置唯一标识） 不支持 @icon 方式设置图标（因为 Stellar 不再内置 fontawesome 图标库） 轮廓样式简化，可以搭配其它容器类标签嵌套使用。 演示效果示例代码图片代码块表格let x = 123print(hello world) a b c a1 b1 c1 a2 b2 c2 grid 网格分区容器这个功能在 1.24.0 版本后获得重构，支持固定列数、动态列数、设置间距和圆角。 动态列数 默认的布局为【最小宽度为240px】即如果页面宽度大于 480px 则会显示为 2 列，大于 720px 则会显示为 3 列，以此类推，下面是效果： Unsplash PhotoThe Galactic Center is the rotational center of the Milky Way galaxy. Its central massive object is a supermassive black hole of about 4 million solar masses, which is called Sagittarius A*. Its mass is equal to four million suns. The center is located 25,800 light years away from Earth.Ōwhiro Bay, Wellington, New ZealandPublished on May 31, 2022SONY, ILCE-6000Free to use under the Unsplash License 示例写法如下：% grid %!-- cell --% image https://images.unsplash.com/photo-1653979731557-530f259e0c2c?ixlib=rb-4.0.3ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8auto=formatfit=cropw=774q=80 download:https://unsplash.com/photos/bcql6CtuNv0/download?ixid=MnwxMjA3fDB8MXx0b3BpY3x8NnNNVmpUTFNrZVF8fHx8fDJ8fDE2Njg4NDAxMDIforce=true ratio:774/1161 %!-- cell --**[Unsplash Photo](https://unsplash.com/photos/bcql6CtuNv0)**The Galactic Center is the rotational center of the Milky Way galaxy. Its central massive object is a supermassive black hole of about 4 million solar masses, which is called Sagittarius A*. Its mass is equal to four million suns. The center is located 25,800 light years away from Earth. Ōwhiro Bay, Wellington, New Zealand Published on May 31, 2022 SONY, ILCE-6000 Free to use under the Unsplash License% endgrid % 如果要修改最小宽度，可以这样写： % grid w:350px %...% endgrid % 固定列数 如果要固定为 2 列，可以这样写： % grid c:2 %...% endgrid % 背景样式 普通 Box 样式： cell 1 cell 2 cell 3 cell 4 可浮起的卡片样式： cell 1 cell 2 cell 3 cell 4 示例写法如下：普通 Box 样式：% grid bg:box w:150px %!-- cell --cell 1!-- cell --cell 2!-- cell --cell 3!-- cell --cell 4% endgrid %可浮起的卡片样式：% grid bg:card w:150px %!-- cell --cell 1!-- cell --cell 2!-- cell --cell 3!-- cell --cell 4% endgrid % 设置间距 默认间距为 16px，如果需要修改，可以这样写： % grid bg:card gap:32px w:120px %!-- cell --cell 1!-- cell --cell 2!-- cell --cell 3!-- cell --cell 4% endgrid % cell 1 cell 2 cell 3 cell 4 设置圆角半径 默认圆角半径等同于卡片的圆角半径，如果需要修改，可以这样写： % grid bg:card br:4px w:150px %!-- cell --cell 1!-- cell --cell 2!-- cell --cell 3!-- cell --cell 4% endgrid % cell 1 cell 2 cell 3 cell 4 这里的 br 是 border-radius 的缩写，虽然和 br 易混淆，但是我不知道是否有其他更好的命名，全称太长了。 gallery 图库容器这个功能在 1.21.0 版本后开始支持，其内部只能填写 md 格式的图片。 @tianhao_wang@eberhard@eberhard@eberhard@eberhard@vklemen 写法如下% gallery %![@tianhao_wang](https://images.unsplash.com/photo-1688142202243-e218ad203952?w=800auto=formatfit=cropq=60ixlib=rb-4.0.3ixid=M3wxMjA3fDB8MHx0b3BpYy1mZWVkfDYzfEZ6bzN6dU9ITjZ3fHxlbnwwfHx8fHw%3D)![@eberhard](https://images.unsplash.com/photo-1700994630045-f7a20df6d92e?w=800auto=formatfit=cropq=60ixlib=rb-4.0.3ixid=M3wxMjA3fDB8MHxwcm9maWxlLXBhZ2V8MjN8fHxlbnwwfHx8fHw%3D)![@eberhard](https://images.unsplash.com/photo-1533274221104-015a584a1005?w=800auto=formatfit=cropq=60ixlib=rb-4.0.3ixid=M3wxMjA3fDB8MHx0b3BpYy1mZWVkfDE4fGJvOGpRS1RhRTBZfHxlbnwwfHx8fHw%3D)![@eberhard](https://images.unsplash.com/photo-1539604214100-ab860d9082e0?w=800auto=formatfit=cropq=60ixlib=rb-4.0.3ixid=M3wxMjA3fDB8MHx0b3BpYy1mZWVkfDIxfGJvOGpRS1RhRTBZfHxlbnwwfHx8fHw%3D)![@eberhard](https://images.unsplash.com/photo-1698843848092-588f9c1bb0bd?w=800auto=formatfit=cropq=60ixlib=rb-4.0.3ixid=M3wxMjA3fDB8MHxwcm9maWxlLXBhZ2V8Mzh8fHxlbnwwfHx8fHw%3D)![@vklemen](https://images.unsplash.com/photo-1516571748831-5d81767b788d?q=80w=2574auto=formatfit=cropixlib=rb-4.0.3ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)% endgallery % 详细用法请看这篇文章： /blog/20231223https://xaoxuu.com/wiki/stellar/blog/20231223 albums 专辑容器类似于 gallery 但是支持点击跳转，数据来源于 blog/source/_data/links/group_id.yml blog/source/_posts/xxx.md% albums group_id % posters 海报容器类似于 gallery 但是支持点击跳转，数据来源于 blog/source/_data/links/group_id.yml blog/source/_posts/xxx.md% posters group_id % banner 横幅容器这个功能在 1.21.0 版本后开始支持，将会取代 about 组件，请尽快完成迁移。 用于独立页面顶部 随记收藏随记 写法如下：% banner 随记 bg:https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/banner/notes.jpg %% navbar active:/notes/ [随记](/notes/) [收藏](/bookmark/) %% endbanner % 用于用户个人资料页 某某这是个人简介 写法如下：% banner 某某 这是个人简介 avatar:https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/xaoxuu/avatar/rect-256@2x.png bg:https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/banner/nebula.jpg %% endbanner % 用作文章摘要卡片设置 link 可以让整个卡片响应点击事件，实现点击跳转到对应文章： % banner 博客进阶：自动化部署 本文讲了如何利用脚本和 GitHub Actions 简化博客搭建和部署流程，提高效率。 bg:https://gcore.jsdelivr.net/gh/xaoxuu/assets.xaoxuu.com/xaoxuu/blog/2022-1126a@2x.jpg link:/blog/20221126/ %% endbanner % 博客进阶：自动化部署本文讲了如何利用脚本和 GitHub Actions 简化博客搭建和部署流程，提高效率。 swiper 轮播容器默认一张图片是 50% 宽度，通过设置 width:min 设置为 25% 宽度，width:max 设置为 100% 宽度。 写法如下% swiper effect:cards %![](https://images.unsplash.com/photo-1625171515821-1870deb2743b?ixlib=rb-4.0.3ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8auto=formatfit=cropw=774q=80)![](https://images.unsplash.com/photo-1528283648649-33347faa5d9e?ixlib=rb-4.0.3ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8auto=formatfit=cropw=774q=80)![](https://images.unsplash.com/photo-1542272201-b1ca555f8505?ixlib=rb-4.0.3ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8auto=formatfit=cropw=774q=80)![](https://images.unsplash.com/photo-1524797905120-92940d3a18d6?ixlib=rb-4.0.3ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8auto=formatfit=cropw=774q=80)% endswiper % 宽度切换效果写法如下% swiper width:min/max %...% endswiper %% swiper effect:cards/coverflow %...% endswiper % 注意一个页面只能设置一次，第一个 swiper 容器的效果全局生效。"}]